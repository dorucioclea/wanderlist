{"ast":null,"code":"import _classCallCheck from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/peterzernia/projects/countries/src/containers/Feed.js\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport CountryModal from '../components/CountryModal';\nimport TripReport from '../components/TripReport';\nimport { openCountryModal, closeCountryModal } from '../actions/modalActions';\nimport { fetchNextTripReports } from '../actions/tripReportActions';\nimport { removeError } from '../actions/errorActions';\nimport { DotLoader } from 'react-spinners';\nimport Button from '@material-ui/core/Button';\n\nvar Home =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Home, _Component);\n\n  function Home() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Home)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onScroll = function () {\n      var element = document.getElementById('scroll');\n\n      if (_this.isBottom(element) && _this.props.next) {\n        _this.props.fetchNextTripReports(_this.props.next);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"isBottom\",\n    value: function isBottom(el) {\n      return el.getBoundingClientRect().bottom <= window.innerHeight;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener('scroll', this.onScroll);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.removeError();\n      document.removeEventListener('scroll', this.onScroll);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var listTripReports = null;\n\n      if (this.props.tripReports) {\n        listTripReports = this.props.tripReports.map(function (tripReport) {\n          return React.createElement(\"div\", {\n            key: tripReport.id,\n            className: \"trip-report\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40\n            },\n            __self: this\n          }, React.createElement(TripReport, Object.assign({}, tripReport, {\n            openCountryModal: _this2.props.openCountryModal,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          })));\n        });\n      }\n\n      return React.createElement(\"div\", {\n        id: \"scroll\",\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, this.props.fetching && React.createElement(\"div\", {\n        className: \"centered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(DotLoader, {\n        size: 50,\n        color: '#2196f3',\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })), this.props.fetched && React.createElement(CountryModal, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })), this.props.fetched && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, listTripReports), this.props.fetchingNext && React.createElement(DotLoader, {\n        size: 50,\n        color: '#2196f3',\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nvar mapState = function mapState(state) {\n  return {\n    fetched: state.tripReport.fetched,\n    fetching: state.tripReport.fetching,\n    next: state.tripReport.tripReports.next,\n    fetchingNext: state.tripReport.fetchingNext,\n    tripReports: state.tripReport.tripReports.results,\n    showCountryModal: state.modal.showCountryModal,\n    modalCountry: state.modal.modalCountry\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return bindActionCreators({\n    openCountryModal: openCountryModal,\n    closeCountryModal: closeCountryModal,\n    removeError: removeError,\n    fetchNextTripReports: fetchNextTripReports\n  }, dispatch);\n};\n\nexport default connect(mapState, mapDispatch)(Home);\nHome.propTypes = {\n  fetched: PropTypes.bool,\n  fetching: PropTypes.bool,\n  next: PropTypes.string,\n  tripReports: PropTypes.array,\n  showCountryModal: PropTypes.bool,\n  modalCountry: PropTypes.object,\n  openCountryModal: PropTypes.func,\n  closeCountryModal: PropTypes.func,\n  removeError: PropTypes.func,\n  fetchNextTripReports: PropTypes.func\n};","map":{"version":3,"sources":["/Users/peterzernia/projects/countries/src/containers/Feed.js"],"names":["React","Component","bindActionCreators","connect","PropTypes","CountryModal","TripReport","openCountryModal","closeCountryModal","fetchNextTripReports","removeError","DotLoader","Button","Home","onScroll","element","document","getElementById","isBottom","props","next","el","getBoundingClientRect","bottom","window","innerHeight","addEventListener","removeEventListener","listTripReports","tripReports","map","tripReport","id","fetching","fetched","fetchingNext","mapState","state","results","showCountryModal","modal","modalCountry","mapDispatch","dispatch","propTypes","bool","string","array","object","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { PropTypes } from 'prop-types'\nimport CountryModal from '../components/CountryModal'\nimport TripReport from '../components/TripReport'\nimport { openCountryModal, closeCountryModal } from '../actions/modalActions'\nimport { fetchNextTripReports } from '../actions/tripReportActions'\nimport { removeError } from '../actions/errorActions'\nimport { DotLoader } from 'react-spinners';\nimport Button from '@material-ui/core/Button'\n\nclass Home extends Component {\n\n  isBottom(el) {\n    return el.getBoundingClientRect().bottom <= window.innerHeight;\n  }\n\n  componentDidMount() {\n    document.addEventListener('scroll', this.onScroll);\n  }\n\n  componentWillUnmount() {\n    this.props.removeError();\n    document.removeEventListener('scroll', this.onScroll);\n  }\n\n  onScroll = () => {\n    const element = document.getElementById('scroll');\n    if (this.isBottom(element) && this.props.next) {\n      this.props.fetchNextTripReports(this.props.next);\n    }\n  };\n\n  render(){\n\n    let listTripReports = null;\n    if (this.props.tripReports){\n      listTripReports = this.props.tripReports.map(tripReport =>(\n        <div key={tripReport.id} className='trip-report'>\n          <TripReport {...tripReport} openCountryModal={this.props.openCountryModal}/>\n        </div>\n      ));\n    }\n\n    return(\n      <div id='scroll' className=\"content\">\n        {this.props.fetching && <div className='centered'><DotLoader size={50} color={'#2196f3'} className=\"content\" /></div>}\n        {this.props.fetched && <CountryModal {...this.props} />}\n        {this.props.fetched && <div>{listTripReports}</div>}\n        {this.props.fetchingNext && <DotLoader size={50} color={'#2196f3'} className=\"content\" />}\n      </div>\n    );\n  }\n}\n\nconst mapState = state => {\n  return {\n    fetched: state.tripReport.fetched,\n    fetching: state.tripReport.fetching,\n    next: state.tripReport.tripReports.next,\n    fetchingNext: state.tripReport.fetchingNext,\n    tripReports: state.tripReport.tripReports.results,\n    showCountryModal: state.modal.showCountryModal,\n    modalCountry: state.modal.modalCountry\n  };\n}\n\nconst mapDispatch = dispatch => {\n  return bindActionCreators({\n    openCountryModal,\n    closeCountryModal,\n    removeError,\n    fetchNextTripReports,\n  }, dispatch);\n}\n\nexport default connect(mapState, mapDispatch)(Home);\n\nHome.propTypes = {\n  fetched: PropTypes.bool,\n  fetching: PropTypes.bool,\n  next: PropTypes.string,\n  tripReports: PropTypes.array,\n  showCountryModal: PropTypes.bool,\n  modalCountry: PropTypes.object,\n  openCountryModal: PropTypes.func,\n  closeCountryModal: PropTypes.func,\n  removeError: PropTypes.func,\n  fetchNextTripReports: PropTypes.func,\n};\n"]},"metadata":{},"sourceType":"module"}