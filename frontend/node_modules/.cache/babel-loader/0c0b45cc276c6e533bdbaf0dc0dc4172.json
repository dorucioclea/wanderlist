{"ast":null,"code":"import axios from 'axios';\nimport { fetchTripReports, fetchUserTripReports } from './tripReportActions'; // Fetch authenticated user axios actions\n\nexport var fetchUserPending = function fetchUserPending() {\n  return {\n    type: \"FETCH_USER_PENDING\"\n  };\n};\nexport var fetchUserFulfilled = function fetchUserFulfilled(user) {\n  return {\n    type: \"FETCH_USER_FULFILLED\",\n    user: user\n  };\n};\nexport var fetchUserRejected = function fetchUserRejected() {\n  return {\n    type: \"FETCH_USER_REJECTED\"\n  };\n}; // PUT user axios actions for updating user information\n\nexport var putUserDataFulfilled = function putUserDataFulfilled(user) {\n  return {\n    type: \"PUT_USER_DATA_FULFILLED\",\n    user: user\n  };\n};\nexport var putUserDataRejected = function putUserDataRejected() {\n  return {\n    type: \"PUT_USER_DATA_REJECTED\"\n  };\n}; // Fetch single user axios actions for viewing proflile\n\nexport var fetchSingleUserPending = function fetchSingleUserPending() {\n  return {\n    type: \"FETCH_SINGLE_USER_PENDING\"\n  };\n};\nexport var fetchSingleUserFulfilled = function fetchSingleUserFulfilled(user) {\n  return {\n    type: \"FETCH_SINGLE_USER_FULFILLED\",\n    user: user\n  };\n};\nexport var fetchSingleUserRejected = function fetchSingleUserRejected() {\n  return {\n    type: \"FETCH_SINGLE_USER_REJECTED\"\n  };\n}; // GET requests the Django REST API, which returns authenticated user object.\n\nexport var fetchUser = function fetchUser() {\n  var token = localStorage.getItem('token');\n  return function (dispatch) {\n    dispatch(fetchUserPending());\n    axios.get('http://localhost:8000/api/v1/rest-auth/user/', {\n      headers: {\n        'Authorization': \"Token \".concat(token)\n      }\n    }).then(function (response) {\n      var user = response.data;\n      dispatch(fetchUserFulfilled(user));\n    }).catch(function (err) {\n      dispatch(fetchUserRejected());\n      dispatch({\n        type: \"ADD_ERROR\",\n        error: err\n      });\n    });\n  };\n}; // PUT requests the Django REST API to update user object.\n\nexport var putUserData = function putUserData(username, email, countries, home, biography, success) {\n  var token = localStorage.getItem('token');\n  return function (dispatch) {\n    axios.put('http://localhost:8000/api/v1/rest-auth/user/', {\n      username: username,\n      email: email,\n      countries: countries,\n      home: home,\n      biography: biography\n    }, {\n      headers: {\n        'Authorization': \"Token \".concat(token)\n      }\n    }).then(function (response) {\n      var user = response.data;\n      dispatch(putUserDataFulfilled(user));\n      dispatch(fetchTripReports());\n      dispatch(fetchUserTripReports(username));\n      dispatch({\n        type: \"ADD_SUCCESS\",\n        success: success\n      });\n    }).catch(function (err) {\n      dispatch(putUserDataRejected());\n      dispatch({\n        type: \"ADD_ERROR\",\n        error: err\n      });\n    });\n  };\n}; // GET requests the Django REST API, which returns user object from List View.\n\nexport var fetchSingleUser = function fetchSingleUser(username) {\n  return function (dispatch) {\n    dispatch(fetchSingleUserPending());\n    axios.get(\"http://localhost:8000/api/v1/users/?search=\".concat(username)).then(function (response) {\n      var user = response.data;\n      dispatch(fetchSingleUserFulfilled(user));\n    }).catch(function (err) {\n      dispatch(fetchSingleUserRejected());\n      dispatch({\n        type: \"ADD_ERROR\",\n        error: err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/peterzernia/projects/countries/src/actions/userActions.js"],"names":["axios","fetchTripReports","fetchUserTripReports","fetchUserPending","type","fetchUserFulfilled","user","fetchUserRejected","putUserDataFulfilled","putUserDataRejected","fetchSingleUserPending","fetchSingleUserFulfilled","fetchSingleUserRejected","fetchUser","token","localStorage","getItem","dispatch","get","headers","then","response","data","catch","err","error","putUserData","username","email","countries","home","biography","success","put","fetchSingleUser"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { fetchTripReports, fetchUserTripReports } from './tripReportActions'\n\n// Fetch authenticated user axios actions\nexport const fetchUserPending = () => {\n  return {\n    type: \"FETCH_USER_PENDING\"\n  }\n}\n\nexport const fetchUserFulfilled = user => {\n  return {\n    type: \"FETCH_USER_FULFILLED\",\n    user: user\n  }\n}\n\nexport const fetchUserRejected = () => {\n  return {\n    type: \"FETCH_USER_REJECTED\",\n  }\n}\n\n// PUT user axios actions for updating user information\n\nexport const putUserDataFulfilled = user => {\n  return {\n    type: \"PUT_USER_DATA_FULFILLED\",\n    user: user\n  }\n}\n\nexport const putUserDataRejected = () => {\n  return {\n    type: \"PUT_USER_DATA_REJECTED\",\n  }\n}\n\n// Fetch single user axios actions for viewing proflile\nexport const fetchSingleUserPending = () => {\n  return {\n    type: \"FETCH_SINGLE_USER_PENDING\"\n  }\n}\n\nexport const fetchSingleUserFulfilled = user => {\n  return {\n    type: \"FETCH_SINGLE_USER_FULFILLED\",\n    user: user\n  }\n}\n\nexport const fetchSingleUserRejected = () => {\n  return {\n    type: \"FETCH_SINGLE_USER_REJECTED\",\n  }\n}\n\n\n// GET requests the Django REST API, which returns authenticated user object.\nexport const fetchUser = () => {\n  const token = localStorage.getItem('token');\n  return dispatch => {\n    dispatch(fetchUserPending());\n    axios.get('http://localhost:8000/api/v1/rest-auth/user/', {headers: { 'Authorization': `Token ${token}`}})\n      .then(response => {\n        const user = response.data;\n        dispatch(fetchUserFulfilled(user));\n      })\n      .catch(err => {\n        dispatch(fetchUserRejected());\n        dispatch({type: \"ADD_ERROR\", error: err});\n      })\n  }\n}\n\n// PUT requests the Django REST API to update user object.\nexport const putUserData = (username, email, countries, home, biography, success) => {\n  const token = localStorage.getItem('token');\n  return dispatch => {\n    axios.put(\n      'http://localhost:8000/api/v1/rest-auth/user/',\n      {\n        username: username,\n        email: email,\n        countries: countries,\n        home: home,\n        biography: biography\n      },\n      {headers: { 'Authorization': `Token ${token}`}}\n  )\n      .then(response => {\n        const user = response.data;\n        dispatch(putUserDataFulfilled(user));\n        dispatch(fetchTripReports());\n        dispatch(fetchUserTripReports(username));\n        dispatch({type: \"ADD_SUCCESS\", success: success});\n      })\n      .catch(err => {\n        dispatch(putUserDataRejected());\n        dispatch({type: \"ADD_ERROR\", error: err});\n      })\n  }\n}\n\n// GET requests the Django REST API, which returns user object from List View.\nexport const fetchSingleUser = (username) => {\n  return dispatch => {\n    dispatch(fetchSingleUserPending());\n    axios.get(`http://localhost:8000/api/v1/users/?search=${username}`)\n      .then(response => {\n        const user = response.data;\n        dispatch(fetchSingleUserFulfilled(user));\n      })\n      .catch(err => {\n        dispatch(fetchSingleUserRejected());\n        dispatch({type: \"ADD_ERROR\", error: err});\n      })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}