{"ast":null,"code":"import axios from 'axios';\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\nexport var fetchTripReportsPending = function fetchTripReportsPending() {\n  return {\n    type: \"FETCH_TRIP_REPORTS_PENDING\"\n  };\n};\nexport var fetchTripReportsFulfilled = function fetchTripReportsFulfilled(tripReports) {\n  return {\n    type: \"FETCH_TRIP_REPORTS_FULFILLED\",\n    tripReports: tripReports\n  };\n};\nexport var fetchTripReportsRejected = function fetchTripReportsRejected() {\n  return {\n    type: \"FETCH_TRIP_REPORTS_REJECTED\"\n  };\n};\nexport var fetchUserTripReportsPending = function fetchUserTripReportsPending() {\n  return {\n    type: \"FETCH_USER_TRIP_REPORTS_PENDING\"\n  };\n};\nexport var fetchUserTripReportsFulfilled = function fetchUserTripReportsFulfilled(tripReports) {\n  return {\n    type: \"FETCH_USER_TRIP_REPORTS_FULFILLED\",\n    tripReports: tripReports\n  };\n};\nexport var fetchUserTripReportsRejected = function fetchUserTripReportsRejected() {\n  return {\n    type: \"FETCH_USER_TRIP_REPORTS_REJECTED\"\n  };\n};\nexport var postTripReportsPending = function postTripReportsPending() {\n  return {\n    type: \"POST_TRIP_REPORTS_PENDING\"\n  };\n};\nexport var postTripReportsFulfilled = function postTripReportsFulfilled(response) {\n  return {\n    type: \"POST_TRIP_REPORTS_FULFILLED\",\n    response: response\n  };\n};\nexport var postTripReportsRejected = function postTripReportsRejected() {\n  return {\n    type: \"POST_TRIP_REPORTS_REJECTED\"\n  };\n};\nexport var deleteTripReportsPending = function deleteTripReportsPending() {\n  return {\n    type: \"DELETE_TRIP_REPORTS_PENDING\"\n  };\n};\nexport var deleteTripReportsFulfilled = function deleteTripReportsFulfilled(response) {\n  return {\n    type: \"DELETE_TRIP_REPORTS_FULFILLED\",\n    response: response\n  };\n};\nexport var deleteTripReportsRejected = function deleteTripReportsRejected() {\n  return {\n    type: \"DELETE_TRIP_REPORTS_REJECTED\"\n  };\n};\nexport var updateTripReportsPending = function updateTripReportsPending() {\n  return {\n    type: \"UPDATE_TRIP_REPORTS_PENDING\"\n  };\n};\nexport var updateTripReportsFulfilled = function updateTripReportsFulfilled(response) {\n  return {\n    type: \"UPDATE_TRIP_REPORTS_FULFILLED\",\n    response: response\n  };\n};\nexport var updateTripReportsRejected = function updateTripReportsRejected() {\n  return {\n    type: \"UPDATE_TRIP_REPORTS_REJECTED\"\n  };\n};\nexport var fetchTripReports = function fetchTripReports() {\n  return function (dispatch) {\n    dispatch(fetchTripReportsPending());\n    axios.get('http://localhost:8000/api/v1/reports/').then(function (response) {\n      var tripReports = response.data;\n      dispatch(fetchTripReportsFulfilled(tripReports));\n    }).catch(function (err) {\n      dispatch(fetchTripReportsRejected());\n      dispatch({\n        type: \"ADD_ERROR\",\n        error: err\n      });\n    });\n  };\n};\nexport var fetchUserTripReports = function fetchUserTripReports(username) {\n  return function (dispatch) {\n    dispatch(fetchUserTripReportsPending());\n    axios.get(\"http://localhost:8000/api/v1/reports/?search=\".concat(username)).then(function (response) {\n      var tripReports = response.data;\n      dispatch(fetchUserTripReportsFulfilled(tripReports));\n    }).catch(function (err) {\n      dispatch(fetchUserTripReportsRejected());\n      dispatch({\n        type: \"ADD_ERROR\",\n        error: err\n      });\n    });\n  };\n};\nexport var postTripReport = function postTripReport(author, title, content, countries) {\n  var token = localStorage.getItem('token');\n  return function (dispatch) {\n    dispatch(postTripReportsPending());\n    axios.post('http://localhost:8000/api/v1/reports/', {\n      title: title,\n      content: content,\n      author: author,\n      countries: countries\n    }, {\n      headers: {\n        'Authorization': \"Token \".concat(token)\n      }\n    }).then(function (response) {\n      dispatch(postTripReportsFulfilled(response.data));\n    }).catch(function (err) {\n      dispatch(postTripReportsRejected());\n      dispatch({\n        type: \"ADD_ERROR\",\n        error: err\n      });\n    });\n  };\n};\nexport var deleteTripReport = function deleteTripReport(tripReport) {\n  var token = localStorage.getItem('token');\n  return function (dispatch) {\n    dispatch(deleteTripReportsPending());\n    axios.delete(\"http://localhost:8000/api/v1/reports/\".concat(tripReport.id, \"/\"), {\n      headers: {\n        'X-Requested-With': 'XMLHttpRequest',\n        'X-CSRFToken': 'csrftoken',\n        'Authorization': \"Token \".concat(token)\n      }\n    }).then(function (response) {\n      dispatch(deleteTripReportsFulfilled(tripReport));\n    }).catch(function (err) {\n      dispatch(deleteTripReportsRejected());\n      dispatch({\n        type: \"ADD_ERROR\",\n        error: err\n      });\n    });\n  };\n};\nexport var updateTripReport = function updateTripReport(tripReport, author, title, content, countries) {\n  var token = localStorage.getItem('token');\n  return function (dispatch) {\n    dispatch(updateTripReportsPending());\n    axios.put(\"http://localhost:8000/api/v1/reports/\".concat(tripReport, \"/\"), {\n      id: tripReport,\n      author: author,\n      title: title,\n      content: content,\n      countries: countries\n    }, {\n      headers: {\n        'X-Requested-With': 'XMLHttpRequest',\n        'X-CSRFToken': 'csrftoken',\n        'Authorization': \"Token \".concat(token)\n      }\n    }).then(function (response) {\n      dispatch(updateTripReportsFulfilled(response.data));\n    }).catch(function (err) {\n      dispatch(updateTripReportsRejected());\n      dispatch({\n        type: \"ADD_ERROR\",\n        error: err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/peterzernia/projects/countries/src/actions/tripReportActions.js"],"names":["axios","defaults","xsrfCookieName","xsrfHeaderName","fetchTripReportsPending","type","fetchTripReportsFulfilled","tripReports","fetchTripReportsRejected","fetchUserTripReportsPending","fetchUserTripReportsFulfilled","fetchUserTripReportsRejected","postTripReportsPending","postTripReportsFulfilled","response","postTripReportsRejected","deleteTripReportsPending","deleteTripReportsFulfilled","deleteTripReportsRejected","updateTripReportsPending","updateTripReportsFulfilled","updateTripReportsRejected","fetchTripReports","dispatch","get","then","data","catch","err","error","fetchUserTripReports","username","postTripReport","author","title","content","countries","token","localStorage","getItem","post","headers","deleteTripReport","tripReport","delete","id","updateTripReport","put"],"mappings":"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","sourcesContent":["import axios from 'axios'\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nexport const fetchTripReportsPending = () => {\n  return {\n    type: \"FETCH_TRIP_REPORTS_PENDING\"\n  }\n}\n\nexport const fetchTripReportsFulfilled = tripReports => {\n  return {\n    type: \"FETCH_TRIP_REPORTS_FULFILLED\",\n    tripReports: tripReports\n  }\n}\n\nexport const fetchTripReportsRejected = () => {\n  return {\n    type: \"FETCH_TRIP_REPORTS_REJECTED\"\n  }\n}\n\nexport const fetchUserTripReportsPending = () => {\n  return {\n    type: \"FETCH_USER_TRIP_REPORTS_PENDING\"\n  }\n}\n\nexport const fetchUserTripReportsFulfilled = tripReports => {\n  return {\n    type: \"FETCH_USER_TRIP_REPORTS_FULFILLED\",\n    tripReports: tripReports\n  }\n}\n\nexport const fetchUserTripReportsRejected = () => {\n  return {\n    type: \"FETCH_USER_TRIP_REPORTS_REJECTED\",\n  }\n}\n\nexport const postTripReportsPending = () => {\n  return {\n    type: \"POST_TRIP_REPORTS_PENDING\"\n  }\n}\n\nexport const postTripReportsFulfilled = response => {\n  return {\n    type: \"POST_TRIP_REPORTS_FULFILLED\",\n    response: response\n  }\n}\n\nexport const postTripReportsRejected = () => {\n  return {\n    type: \"POST_TRIP_REPORTS_REJECTED\",\n  }\n}\n\nexport const deleteTripReportsPending = () => {\n  return {\n    type: \"DELETE_TRIP_REPORTS_PENDING\"\n  }\n}\n\nexport const deleteTripReportsFulfilled = response => {\n  return {\n    type: \"DELETE_TRIP_REPORTS_FULFILLED\",\n    response: response\n  }\n}\n\nexport const deleteTripReportsRejected = () => {\n  return {\n    type: \"DELETE_TRIP_REPORTS_REJECTED\",\n  }\n}\n\nexport const updateTripReportsPending = () => {\n  return {\n    type: \"UPDATE_TRIP_REPORTS_PENDING\"\n  }\n}\n\nexport const updateTripReportsFulfilled = response => {\n  return {\n    type: \"UPDATE_TRIP_REPORTS_FULFILLED\",\n    response: response\n  }\n}\n\nexport const updateTripReportsRejected = () => {\n  return {\n    type: \"UPDATE_TRIP_REPORTS_REJECTED\",\n  }\n}\n\nexport const fetchTripReports = () => {\n  return dispatch => {\n    dispatch(fetchTripReportsPending());\n    axios.get('http://localhost:8000/api/v1/reports/')\n      .then(response => {\n        const tripReports = response.data;\n        dispatch(fetchTripReportsFulfilled(tripReports));\n      })\n      .catch(err => {\n        dispatch(fetchTripReportsRejected());\n        dispatch({type: \"ADD_ERROR\", error: err});\n      })\n  }\n}\n\nexport const fetchUserTripReports = (username) => {\n  return dispatch => {\n    dispatch(fetchUserTripReportsPending());\n    axios.get(`http://localhost:8000/api/v1/reports/?search=${username}`)\n      .then(response => {\n        const tripReports = response.data;\n        dispatch(fetchUserTripReportsFulfilled(tripReports));\n      })\n      .catch(err => {\n        dispatch(fetchUserTripReportsRejected());\n        dispatch({type: \"ADD_ERROR\", error: err});\n      })\n  }\n}\n\nexport const postTripReport = (author, title, content, countries) => {\n  const token = localStorage.getItem('token');\n  return dispatch => {\n    dispatch(postTripReportsPending());\n    axios.post(\n      'http://localhost:8000/api/v1/reports/',\n      {\n        title: title,\n        content: content,\n        author: author,\n        countries: countries\n      },\n      {headers: { 'Authorization': `Token ${token}`}}\n    )\n      .then(response => {\n        dispatch(postTripReportsFulfilled(response.data));\n      })\n      .catch(err => {\n        dispatch(postTripReportsRejected());\n        dispatch({type: \"ADD_ERROR\", error: err});\n      })\n  }\n}\n\nexport const deleteTripReport = (tripReport) => {\n  const token = localStorage.getItem('token');\n  return dispatch => {\n    dispatch(deleteTripReportsPending());\n    axios.delete(`http://localhost:8000/api/v1/reports/${tripReport.id}/`, {headers: {\n      'X-Requested-With': 'XMLHttpRequest',\n      'X-CSRFToken': 'csrftoken',\n      'Authorization': `Token ${token}`\n    }})\n      .then(response => {\n        dispatch(deleteTripReportsFulfilled(tripReport));\n      })\n      .catch(err => {\n        dispatch(deleteTripReportsRejected());\n        dispatch({type: \"ADD_ERROR\", error: err});\n      })\n  }\n}\n\nexport const updateTripReport = (tripReport, author, title, content, countries) => {\n  const token = localStorage.getItem('token');\n  return dispatch => {\n    dispatch(updateTripReportsPending());\n    axios.put(`http://localhost:8000/api/v1/reports/${tripReport}/`,\n      {\n        id: tripReport,\n        author: author,\n        title: title,\n        content: content,\n        countries: countries\n      },\n      {headers: {\n        'X-Requested-With': 'XMLHttpRequest',\n        'X-CSRFToken': 'csrftoken',\n        'Authorization': `Token ${token}`\n    }})\n      .then(response => {\n        dispatch(updateTripReportsFulfilled(response.data));\n      })\n      .catch(err => {\n        dispatch(updateTripReportsRejected());\n        dispatch({type: \"ADD_ERROR\", error: err});\n      })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}