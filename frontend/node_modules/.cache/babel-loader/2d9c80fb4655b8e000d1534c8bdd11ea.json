{"ast":null,"code":"import _classCallCheck from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/peterzernia/projects/countries/src/containers/EditProfile.js\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { openEditProfileModal, closeEditProfileModal } from '../actions/modalActions';\nimport { putUserData } from '../actions/userActions';\nimport { fetchCountry } from '../actions/countryActions';\nimport { fetchNextUserTripReports } from '../actions/tripReportActions';\nimport { fetchUserTripReports, postTripReport, deleteTripReport, updateTripReport } from '../actions/tripReportActions';\nimport { openPostModal, closePostModal, openUpdatePostModal, openCountryModal, closeCountryModal, openConfirmDeleteModal, closeConfirmDeleteModal, openTripReportModal, closeTripReportModal } from '../actions/modalActions';\nimport { openCopyLinkModal, closeCopyLinkModal } from '../actions/modalActions';\nimport { removeError } from '../actions/errorActions';\nimport { toggleFavorite } from '../actions/favoriteActions';\nimport GoogleMap from '../components/GoogleMap';\nimport EditProfileModal from '../components/EditProfileModal';\nimport TripReportThumbnail from '../components/TripReportThumbnail';\nimport TripReportModal from '../components/TripReportModal';\nimport ConfirmDeleteModal from '../components/ConfirmDeleteModal';\nimport CountryModal from '../components/CountryModal';\nimport CopyLinkModal from '../components/CopyLinkModal';\nimport PostModal from '../components/PostModal';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { DotLoader } from 'react-spinners';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport Add from '@material-ui/icons/Add';\nimport Tooltip from '@material-ui/core/Tooltip';\n/*\nThis container displays the same information as ViewProfile, but is used for\nauthenticated users to edit their profile information, and post new Trip\nReports. This is a protected route, so only authenticated users will have\naccess to editing their profile.\n*/\n\nvar EditProfile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditProfile, _Component);\n\n  function EditProfile() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditProfile);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditProfile)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onScroll = function () {\n      var element = document.getElementById('scroll');\n\n      if (_this.isBottom(element) && _this.props.next && !_this.props.fetchingUserNext && !_this.props.fetchingTripReports) {\n        _this.props.fetchNextUserTripReports(_this.props.next);\n      }\n    };\n\n    _this.handlePostSubmit = function (e) {\n      e.preventDefault(); // e.target.countries.value must be split at the comma and then strings\n      // must be converted into numbers.\n\n      var countries;\n\n      if (e.target.countries.value !== '') {\n        countries = e.target.countries.value.split(',').map(Number);\n      }\n\n      _this.props.postTripReport(_this.props.user.pk, e.target.title.value, e.target.content.value, countries, e.target.image.files[0]);\n\n      _this.props.closePostModal();\n    };\n\n    _this.handleUpdateSubmit = function (e) {\n      e.preventDefault();\n      var countries;\n\n      if (e.target.countries.value !== '') {\n        countries = e.target.countries.value.split(',').map(Number);\n      }\n\n      _this.props.updateTripReport(_this.props.modalPost.id, _this.props.user.pk, e.target.title.value, e.target.content.value, countries, e.target.image.files[0]);\n\n      _this.props.closePostModal();\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      var userCountryList = _this.props.userCountries.map(function (country) {\n        return country.id;\n      });\n\n      _this.props.putUserData(e.target.username.value, e.target.email.value, userCountryList, Number(e.target.country.value), e.target.biography.value, 'Your profile has been updated.');\n\n      _this.props.closeEditProfileModal();\n    };\n\n    _this.handleClick = function (e) {\n      e.preventDefault();\n\n      _this.props.toggleFavorite(e.currentTarget.id);\n    };\n\n    return _this;\n  }\n\n  _createClass(EditProfile, [{\n    key: \"isBottom\",\n    // Returns True if the user has scrolled past the bottom.\n    value: function isBottom(el) {\n      return el.getBoundingClientRect().bottom <= window.innerHeight;\n    } // Adds event listener that checks for scrolling.\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchUserTripReports(localStorage.getItem('username'));\n      document.addEventListener('scroll', this.onScroll);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.removeError();\n      document.removeEventListener('scroll', this.onScroll);\n    }\n    /*\n    If the user has scrolled to the bottom, AND there is next URL to load more\n    Trip Reports, AND the next Trip Reports are not already being fetched, the\n    next Trip Reports will be fetched i.e. infinite scrolling.\n    */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      /*\n      List out Trip Reports to display in Material UI grid component.\n      */\n      var listTripReports = null;\n\n      if (this.props.tripReports) {\n        listTripReports = this.props.tripReports.map(function (tripReport) {\n          return React.createElement(Grid, {\n            item: true,\n            key: tripReport.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 146\n            },\n            __self: this\n          }, React.createElement(TripReportThumbnail, Object.assign({\n            tripReport: tripReport\n          }, _this2.props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147\n            },\n            __self: this\n          })));\n        });\n      }\n\n      return React.createElement(\"div\", {\n        id: \"scroll\",\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(CopyLinkModal, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      })), this.props.fetched && React.createElement(CountryModal, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      })), React.createElement(EditProfileModal, Object.assign({\n        handleSubmit: this.handleSubmit\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      })), React.createElement(PostModal, Object.assign({}, this.props, {\n        handlePostSubmit: this.handlePostSubmit,\n        handleUpdateSubmit: this.handleUpdateSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      })), React.createElement(ConfirmDeleteModal, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      })), this.props.modalPost.author && React.createElement(TripReportModal, Object.assign({\n        handleClick: this.handleClick\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"wrap\",\n        style: {\n          marginBottom: 60\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"left\",\n        style: {\n          width: '37%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, this.props.user.home && React.createElement(Avatar, {\n        style: {\n          width: 150,\n          height: 150,\n          margin: '0 auto'\n        },\n        src: this.props.user.home.flag,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"right\",\n        style: {\n          textAlign: 'left',\n          width: '63%',\n          padding: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          height: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, this.props.user.username)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          height: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"small\",\n        variant: \"outlined\",\n        onClick: function onClick() {\n          return _this2.props.openEditProfileModal(_this2.props.user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Edit Profile\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          height: 40,\n          maxWidth: '75%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, this.props.user.biography))), React.createElement(\"hr\", {\n        style: {\n          width: '85%',\n          size: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), this.props.fetched && React.createElement(GoogleMap, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      })), React.createElement(\"hr\", {\n        style: {\n          width: '85%',\n          size: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"New Trip Report\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        variant: \"contained\",\n        \"aria-label\": \"New Trip Report\",\n        onClick: this.props.openPostModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Add, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }))), this.props.posting && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(DotLoader, {\n        size: 50,\n        color: '#2196f3',\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      })), this.props.fetchingTripReports && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(DotLoader, {\n        size: 50,\n        color: '#2196f3',\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      })), this.props.fetchedTripReports && React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, listTripReports), React.createElement(\"div\", {\n        style: {\n          height: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), this.props.fetchingUserNext && React.createElement(DotLoader, {\n        size: 50,\n        color: '#2196f3',\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return EditProfile;\n}(Component);\n\nvar mapState = function mapState(state) {\n  return {\n    pk: state.user.user.pk,\n    authenticated: state.auth.authenticated,\n    user: state.user.user,\n    next: state.tripReport.userTripReports.next,\n    fetched: state.user.fetched,\n    fetchingUserNext: state.tripReport.fetchingUserNext,\n    searchedCountry: state.country.country,\n    showEditProfileModal: state.modal.showEditProfileModal,\n    modalProfile: state.modal.modalProfile,\n    userCountries: state.user.user.countries,\n    showCountryModal: state.modal.showCountryModal,\n    modalCountry: state.modal.modalCountry,\n    showPostModal: state.modal.showPostModal,\n    fetchingTripReports: state.tripReport.fetchingTripReports,\n    fetchedTripReports: state.tripReport.fetchedTripReports,\n    tripReports: state.tripReport.userTripReports.results,\n    updatePostModal: state.modal.updatePostModal,\n    modalPost: state.modal.modalPost,\n    showConfirmDeleteModal: state.modal.showConfirmDeleteModal,\n    showTripReportModal: state.modal.showTripReportModal,\n    showCopyLinkModal: state.modal.showCopyLinkModal,\n    modalLink: state.modal.modalLink,\n    posting: state.tripReport.posting\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return bindActionCreators({\n    fetchCountry: fetchCountry,\n    putUserData: putUserData,\n    openEditProfileModal: openEditProfileModal,\n    closeEditProfileModal: closeEditProfileModal,\n    openCountryModal: openCountryModal,\n    closeCountryModal: closeCountryModal,\n    removeError: removeError,\n    fetchUserTripReports: fetchUserTripReports,\n    postTripReport: postTripReport,\n    deleteTripReport: deleteTripReport,\n    updateTripReport: updateTripReport,\n    openPostModal: openPostModal,\n    closePostModal: closePostModal,\n    openUpdatePostModal: openUpdatePostModal,\n    openConfirmDeleteModal: openConfirmDeleteModal,\n    closeConfirmDeleteModal: closeConfirmDeleteModal,\n    openTripReportModal: openTripReportModal,\n    closeTripReportModal: closeTripReportModal,\n    fetchNextUserTripReports: fetchNextUserTripReports,\n    toggleFavorite: toggleFavorite,\n    openCopyLinkModal: openCopyLinkModal,\n    closeCopyLinkModal: closeCopyLinkModal\n  }, dispatch);\n};\n\nexport default connect(mapState, mapDispatch)(EditProfile);\nEditProfile.propTypes = {\n  pk: PropTypes.number,\n  authenticated: PropTypes.bool,\n  user: PropTypes.object,\n  next: PropTypes.string,\n  fetched: PropTypes.bool,\n  fetchingUserNext: PropTypes.bool,\n  searchedCountry: PropTypes.array,\n  showEditProfileModal: PropTypes.bool,\n  modalProfile: PropTypes.object,\n  userCountries: PropTypes.array,\n  showCountryModal: PropTypes.bool,\n  modalCountry: PropTypes.object,\n  showPostModal: PropTypes.bool,\n  fetchingTripReports: PropTypes.bool,\n  fetchedTripReports: PropTypes.bool,\n  tripReports: PropTypes.array,\n  updatePostModal: PropTypes.bool,\n  modalPost: PropTypes.object,\n  showConfirmDeleteModal: PropTypes.bool,\n  showTripReportModal: PropTypes.bool,\n  showCopyLinkModal: PropTypes.bool,\n  modalLink: PropTypes.string,\n  posting: PropTypes.bool,\n  fetchCountry: PropTypes.func,\n  putUserData: PropTypes.func,\n  openEditProfileModal: PropTypes.func,\n  closeEditProfileModal: PropTypes.func,\n  openCountryModal: PropTypes.func,\n  closeCountryModal: PropTypes.func,\n  removeError: PropTypes.func,\n  fetchUserTripReports: PropTypes.func,\n  postTripReport: PropTypes.func,\n  deleteTripReport: PropTypes.func,\n  updateTripReport: PropTypes.func,\n  openPostModal: PropTypes.func,\n  closePostModal: PropTypes.func,\n  openUpdatePostModal: PropTypes.func,\n  openConfirmDeleteModal: PropTypes.func,\n  closeConfirmDeleteModal: PropTypes.func,\n  openTripReportModal: PropTypes.func,\n  closeTripReportModal: PropTypes.func,\n  fetchNextUserTripReports: PropTypes.func,\n  toggleFavorite: PropTypes.func,\n  openCopyLinkModal: PropTypes.func,\n  closeCopyLinkModal: PropTypes.func\n};","map":{"version":3,"sources":["/Users/peterzernia/projects/countries/src/containers/EditProfile.js"],"names":["React","Component","bindActionCreators","connect","PropTypes","openEditProfileModal","closeEditProfileModal","putUserData","fetchCountry","fetchNextUserTripReports","fetchUserTripReports","postTripReport","deleteTripReport","updateTripReport","openPostModal","closePostModal","openUpdatePostModal","openCountryModal","closeCountryModal","openConfirmDeleteModal","closeConfirmDeleteModal","openTripReportModal","closeTripReportModal","openCopyLinkModal","closeCopyLinkModal","removeError","toggleFavorite","GoogleMap","EditProfileModal","TripReportThumbnail","TripReportModal","ConfirmDeleteModal","CountryModal","CopyLinkModal","PostModal","Button","Avatar","Typography","DotLoader","IconButton","Grid","Add","Tooltip","EditProfile","onScroll","element","document","getElementById","isBottom","props","next","fetchingUserNext","fetchingTripReports","handlePostSubmit","e","preventDefault","countries","target","value","split","map","Number","user","pk","title","content","image","files","handleUpdateSubmit","modalPost","id","handleSubmit","userCountryList","userCountries","country","username","email","biography","handleClick","currentTarget","el","getBoundingClientRect","bottom","window","innerHeight","localStorage","getItem","addEventListener","removeEventListener","listTripReports","tripReports","tripReport","fetched","author","marginBottom","width","home","height","margin","flag","textAlign","padding","maxWidth","size","posting","fetchedTripReports","mapState","state","authenticated","auth","userTripReports","searchedCountry","showEditProfileModal","modal","modalProfile","showCountryModal","modalCountry","showPostModal","results","updatePostModal","showConfirmDeleteModal","showTripReportModal","showCopyLinkModal","modalLink","mapDispatch","dispatch","propTypes","number","bool","object","string","array","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport { openEditProfileModal, closeEditProfileModal } from '../actions/modalActions'\nimport { putUserData } from '../actions/userActions'\nimport { fetchCountry } from '../actions/countryActions'\nimport { fetchNextUserTripReports } from '../actions/tripReportActions'\nimport { fetchUserTripReports, postTripReport, deleteTripReport, updateTripReport } from '../actions/tripReportActions'\nimport { openPostModal, closePostModal, openUpdatePostModal, openCountryModal,\n         closeCountryModal, openConfirmDeleteModal, closeConfirmDeleteModal,\n         openTripReportModal, closeTripReportModal } from '../actions/modalActions'\nimport { openCopyLinkModal, closeCopyLinkModal } from '../actions/modalActions'\nimport { removeError } from '../actions/errorActions'\nimport { toggleFavorite } from '../actions/favoriteActions'\n\nimport GoogleMap from '../components/GoogleMap'\nimport EditProfileModal from '../components/EditProfileModal'\nimport TripReportThumbnail from '../components/TripReportThumbnail'\nimport TripReportModal from '../components/TripReportModal'\nimport ConfirmDeleteModal from '../components/ConfirmDeleteModal'\nimport CountryModal from '../components/CountryModal'\nimport CopyLinkModal from '../components/CopyLinkModal'\nimport PostModal from '../components/PostModal'\n\nimport Button from '@material-ui/core/Button'\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\nimport { DotLoader } from 'react-spinners'\nimport IconButton from '@material-ui/core/IconButton'\nimport Grid from '@material-ui/core/Grid'\nimport Add from '@material-ui/icons/Add'\nimport Tooltip from '@material-ui/core/Tooltip'\n\n/*\nThis container displays the same information as ViewProfile, but is used for\nauthenticated users to edit their profile information, and post new Trip\nReports. This is a protected route, so only authenticated users will have\naccess to editing their profile.\n*/\nclass EditProfile extends Component {\n\n  // Returns True if the user has scrolled past the bottom.\n  isBottom(el) {\n    return el.getBoundingClientRect().bottom <= window.innerHeight;\n  }\n\n  // Adds event listener that checks for scrolling.\n  componentDidMount() {\n    this.props.fetchUserTripReports(localStorage.getItem('username'));\n    document.addEventListener('scroll', this.onScroll);\n  }\n\n  componentWillUnmount() {\n    this.props.removeError();\n    document.removeEventListener('scroll', this.onScroll);\n  }\n\n  /*\n  If the user has scrolled to the bottom, AND there is next URL to load more\n  Trip Reports, AND the next Trip Reports are not already being fetched, the\n  next Trip Reports will be fetched i.e. infinite scrolling.\n  */\n  onScroll = () => {\n    const element = document.getElementById('scroll');\n    if (this.isBottom(element) && this.props.next && !this.props.fetchingUserNext && !this.props.fetchingTripReports) {\n      this.props.fetchNextUserTripReports(this.props.next);\n    }\n  };\n\n  /*\n  handlPostSubmit will create a new trip report and handleUpdateSubmit will\n  update an existing trip report. Both functions are passed into the Post Modal.\n  If the Post Modal is opened with openPostModal, this.props.updatePostModal\n  remains false and the blank form is displayed, and the submit button will\n  create a new post. If the Post Modal is openeed with openUpdatePostModal,\n  this.props.updatePostModal will flip to true, and the pre-filled in form will\n  display and the submit button will update the existing trip report.\n  */\n  handlePostSubmit = (e) => {\n    e.preventDefault();\n    // e.target.countries.value must be split at the comma and then strings\n    // must be converted into numbers.\n    let countries;\n    if (e.target.countries.value !== '') {\n      countries = e.target.countries.value.split(',').map(Number);\n    }\n    this.props.postTripReport(\n      this.props.user.pk,\n      e.target.title.value,\n      e.target.content.value,\n      countries,\n      e.target.image.files[0]\n    );\n    this.props.closePostModal();\n  }\n\n  handleUpdateSubmit = (e) => {\n    e.preventDefault();\n    let countries;\n    if (e.target.countries.value !== '') {\n      countries = e.target.countries.value.split(',').map(Number);\n    }\n    this.props.updateTripReport(\n      this.props.modalPost.id,\n      this.props.user.pk,\n      e.target.title.value,\n      e.target.content.value,\n      countries,\n      e.target.image.files[0]\n    );\n    this.props.closePostModal();\n  }\n\n  /*\n  This handle submit works with the edit profile modal.\n  */\n  handleSubmit = (e) => {\n    e.preventDefault();\n    let userCountryList = this.props.userCountries.map(country => country.id);\n    this.props.putUserData(\n      e.target.username.value,\n      e.target.email.value,\n      userCountryList,\n      Number(e.target.country.value),\n      e.target.biography.value,\n      'Your profile has been updated.'\n    );\n    this.props.closeEditProfileModal();\n  }\n\n  handleClick = (e) => {\n    e.preventDefault();\n    this.props.toggleFavorite(e.currentTarget.id);\n  }\n\n  render(){\n\n    /*\n    List out Trip Reports to display in Material UI grid component.\n    */\n    let listTripReports = null;\n    if (this.props.tripReports){\n      listTripReports = this.props.tripReports.map(tripReport =>(\n        <Grid item key={tripReport.id}>\n          <TripReportThumbnail tripReport={tripReport} {...this.props} />\n        </Grid>\n      ));\n    }\n\n    return(\n      <div id='scroll' className='content'>\n        <CopyLinkModal {...this.props} />\n        {this.props.fetched && <CountryModal {...this.props} />}\n        <EditProfileModal handleSubmit={this.handleSubmit} {...this.props} />\n        <PostModal {...this.props} handlePostSubmit={this.handlePostSubmit} handleUpdateSubmit={this.handleUpdateSubmit} />\n        <ConfirmDeleteModal {...this.props} />\n        {this.props.modalPost.author && <TripReportModal handleClick={this.handleClick} {...this.props} />}\n\n        {/* This section is the user avatar, username, biography, etc. */}\n        <div className='wrap' style={{ marginBottom: 60 }} >\n          <div className='left' style={{ width: '37%' }}>\n            {this.props.user.home && <Avatar style={{ width: 150, height: 150, margin: '0 auto' }} src={this.props.user.home.flag}/>}\n          </div>\n          <div className='right' style={{textAlign: 'left', width: '63%', padding: 10 }}>\n            <div style={{ height: 40 }}>\n            <Typography variant=\"h4\" gutterBottom>\n              {this.props.user.username}\n            </Typography>\n            </div><br/>\n            <div style={{ height: 40 }}>\n              <Button size='small' variant='outlined' onClick={() => this.props.openEditProfileModal(this.props.user)}>\n                Edit Profile\n              </Button>\n            </div><br/>\n            <div style={{ height: 40, maxWidth: '75%' }}>\n              {this.props.user.biography}\n            </div>\n          </div>\n        </div>\n        <hr style={{width: '85%', size: 1}}/>\n\n        {/* This section is the user map */}\n        {this.props.fetched && <GoogleMap {...this.props}/>}\n        <hr style={{width: '85%', size: 1}}/>\n\n        {/* This section is the user posts */}\n        <div className=\"\">\n          <Tooltip title=\"New Trip Report\">\n            <IconButton variant=\"contained\" aria-label=\"New Trip Report\" onClick={this.props.openPostModal}>\n              <Add />\n            </IconButton>\n          </Tooltip>\n          {this.props.posting && <div><DotLoader size={50} color={'#2196f3'} className=\"content\" /></div>}\n          {this.props.fetchingTripReports && <div><DotLoader size={50} color={'#2196f3'} className=\"content\" /></div>}\n          {this.props.fetchedTripReports && <Grid container spacing={24} justify='center' >{listTripReports}</Grid>}\n          <div style={{ height: 15 }}/>\n          {this.props.fetchingUserNext && <DotLoader size={50} color={'#2196f3'} className=\"content\" />}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = state => {\n  return {\n    pk: state.user.user.pk,\n    authenticated: state.auth.authenticated,\n    user: state.user.user,\n    next: state.tripReport.userTripReports.next,\n    fetched: state.user.fetched,\n    fetchingUserNext: state.tripReport.fetchingUserNext,\n    searchedCountry: state.country.country,\n    showEditProfileModal: state.modal.showEditProfileModal,\n    modalProfile: state.modal.modalProfile,\n    userCountries: state.user.user.countries,\n    showCountryModal: state.modal.showCountryModal,\n    modalCountry: state.modal.modalCountry,\n    showPostModal: state.modal.showPostModal,\n    fetchingTripReports: state.tripReport.fetchingTripReports,\n    fetchedTripReports: state.tripReport.fetchedTripReports,\n    tripReports: state.tripReport.userTripReports.results,\n    updatePostModal: state.modal.updatePostModal,\n    modalPost: state.modal.modalPost,\n    showConfirmDeleteModal: state.modal.showConfirmDeleteModal,\n    showTripReportModal: state.modal.showTripReportModal,\n    showCopyLinkModal: state.modal.showCopyLinkModal,\n    modalLink: state.modal.modalLink,\n    posting: state.tripReport.posting\n  };\n}\n\nconst mapDispatch = dispatch => {\n  return bindActionCreators({\n    fetchCountry,\n    putUserData,\n    openEditProfileModal,\n    closeEditProfileModal,\n    openCountryModal,\n    closeCountryModal,\n    removeError,\n    fetchUserTripReports,\n    postTripReport,\n    deleteTripReport,\n    updateTripReport,\n    openPostModal,\n    closePostModal,\n    openUpdatePostModal,\n    openConfirmDeleteModal,\n    closeConfirmDeleteModal,\n    openTripReportModal,\n    closeTripReportModal,\n    fetchNextUserTripReports,\n    toggleFavorite,\n    openCopyLinkModal,\n    closeCopyLinkModal,\n  }, dispatch);\n}\n\nexport default connect(mapState, mapDispatch)(EditProfile);\n\nEditProfile.propTypes = {\n  pk: PropTypes.number,\n  authenticated: PropTypes.bool,\n  user: PropTypes.object,\n  next: PropTypes.string,\n  fetched: PropTypes.bool,\n  fetchingUserNext: PropTypes.bool,\n  searchedCountry: PropTypes.array,\n  showEditProfileModal: PropTypes.bool,\n  modalProfile: PropTypes.object,\n  userCountries: PropTypes.array,\n  showCountryModal: PropTypes.bool,\n  modalCountry: PropTypes.object,\n  showPostModal: PropTypes.bool,\n  fetchingTripReports: PropTypes.bool,\n  fetchedTripReports: PropTypes.bool,\n  tripReports: PropTypes.array,\n  updatePostModal: PropTypes.bool,\n  modalPost: PropTypes.object,\n  showConfirmDeleteModal: PropTypes.bool,\n  showTripReportModal: PropTypes.bool,\n  showCopyLinkModal: PropTypes.bool,\n  modalLink: PropTypes.string,\n  posting: PropTypes.bool,\n\n  fetchCountry: PropTypes.func,\n  putUserData: PropTypes.func,\n  openEditProfileModal: PropTypes.func,\n  closeEditProfileModal: PropTypes.func,\n  openCountryModal: PropTypes.func,\n  closeCountryModal: PropTypes.func,\n  removeError: PropTypes.func,\n  fetchUserTripReports: PropTypes.func,\n  postTripReport: PropTypes.func,\n  deleteTripReport: PropTypes.func,\n  updateTripReport: PropTypes.func,\n  openPostModal: PropTypes.func,\n  closePostModal: PropTypes.func,\n  openUpdatePostModal: PropTypes.func,\n  openConfirmDeleteModal: PropTypes.func,\n  closeConfirmDeleteModal: PropTypes.func,\n  openTripReportModal: PropTypes.func,\n  closeTripReportModal: PropTypes.func,\n  fetchNextUserTripReports: PropTypes.func,\n  toggleFavorite: PropTypes.func,\n  openCopyLinkModal: PropTypes.func,\n  closeCopyLinkModal: PropTypes.func,\n};\n"]},"metadata":{},"sourceType":"module"}