{"ast":null,"code":"import _classCallCheck from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/peterzernia/projects/countries/src/containers/Profile.js\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport GoogleMap from '../components/GoogleMap';\nimport EditProfileModal from '../components/EditProfileModal';\nimport { openEditProfileModal, closeEditProfileModal } from '../actions/modalActions';\nimport { putUserData } from '../actions/userActions';\nimport { fetchCountry } from '../actions/countryActions';\nimport { fetchNextUserTripReports } from '../actions/tripReportActions';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport CountryModal from '../components/CountryModal';\nimport PostModal from '../components/PostModal';\nimport TripReportThumbnail from '../components/TripReportThumbnail';\nimport TripReportModal from '../components/TripReportModal';\nimport ConfirmDeleteModal from '../components/ConfirmDeleteModal';\nimport { fetchUserTripReports, postTripReport, deleteTripReport, updateTripReport } from '../actions/tripReportActions';\nimport { openPostModal, closePostModal, openUpdatePostModal, openCountryModal, closeCountryModal, openConfirmDeleteModal, closeConfirmDeleteModal, openTripReportModal, closeTripReportModal } from '../actions/modalActions';\nimport { removeError } from '../actions/errorActions';\nimport { DotLoader } from 'react-spinners';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport Add from '@material-ui/icons/Add';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nvar Profile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Profile, _Component);\n\n  function Profile() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Profile)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handlePostSubmit = function (e) {\n      e.preventDefault(); // e.target.countries.value must be split at the comma and then strings\n      // must be converted into numbers.\n\n      var countries;\n\n      if (e.target.countries.value !== '') {\n        countries = e.target.countries.value.split(',').map(Number);\n      }\n\n      _this.props.postTripReport(_this.props.user.pk, e.target.title.value, e.target.content.value, countries);\n\n      _this.props.closePostModal();\n    };\n\n    _this.handleUpdateSubmit = function (e) {\n      e.preventDefault();\n      var countries;\n\n      if (e.target.countries.value !== '') {\n        countries = e.target.countries.value.split(',').map(Number);\n      }\n\n      _this.props.updateTripReport(_this.props.modalPost.id, _this.props.user.pk, e.target.title.value, e.target.content.value, countries);\n\n      _this.props.closePostModal();\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      var userCountryList = _this.props.userCountries.map(function (country) {\n        return country.id;\n      });\n\n      _this.props.putUserData(e.target.username.value, e.target.email.value, userCountryList, Number(e.target.country.value), e.target.biography.value);\n\n      _this.props.closeEditProfileModal();\n    };\n\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.removeError();\n    }\n    /*\n    handlPostSubmit will create a new trip report and handleUpdateSubmit will\n    update an existing trip report. Both functions are passed into the Post Modal.\n    If the Post Modal is opened with openPostModal, this.props.updatePostModal\n    remains false and the blank form is displayed, and the submit button will\n    create a new post. If the Post Modal is openeed with openUpdatePostModal,\n    this.props.updatePostModal will flip to true, and the pre-filled in form will\n    display and the submit button will update the existing trip report.\n    */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var listTripReports = null;\n\n      if (this.props.tripReports) {\n        listTripReports = this.props.tripReports.map(function (tripReport) {\n          return React.createElement(Grid, {\n            item: true,\n            key: tripReport.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }, React.createElement(TripReportThumbnail, Object.assign({\n            tripReport: tripReport\n          }, _this2.props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          })));\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, this.props.fetched && React.createElement(CountryModal, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })), React.createElement(EditProfileModal, Object.assign({\n        handleSubmit: this.handleSubmit\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"wrap\",\n        style: {\n          marginBottom: 60\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"left\",\n        style: {\n          width: '37%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, this.props.user.home && React.createElement(Avatar, {\n        style: {\n          width: 150,\n          height: 150,\n          margin: '0 auto'\n        },\n        src: this.props.user.home.flag,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"right\",\n        style: {\n          textAlign: 'left',\n          width: '63%',\n          padding: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          height: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, this.props.user.username)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          height: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"small\",\n        variant: \"outlined\",\n        onClick: function onClick() {\n          return _this2.props.openEditProfileModal(_this2.props.user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Edit Profile\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          height: 30,\n          maxWidth: '75%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, this.props.user.biography))), React.createElement(\"hr\", {\n        style: {\n          width: '85%',\n          size: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), this.props.fetched && React.createElement(GoogleMap, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      })), React.createElement(\"hr\", {\n        style: {\n          width: '85%',\n          size: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"New Trip Report\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        variant: \"contained\",\n        \"aria-label\": \"New Trip Report\",\n        onClick: this.props.openPostModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Add, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }))), React.createElement(PostModal, Object.assign({}, this.props, {\n        handlePostSubmit: this.handlePostSubmit,\n        handleUpdateSubmit: this.handleUpdateSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      })), React.createElement(ConfirmDeleteModal, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })), this.props.modalPost.author && React.createElement(TripReportModal, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      })), this.props.fetchingTripReports && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(DotLoader, {\n        size: 50,\n        color: '#2196f3',\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })), this.props.fetchedTripReports && React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, listTripReports), this.props.fetchingNext && React.createElement(DotLoader, {\n        size: 50,\n        color: '#2196f3',\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), this.props.next && React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.props.fetchNextUserTripReports(_this2.props.next);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Load More\")));\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nvar mapState = function mapState(state) {\n  return {\n    user: state.user.user,\n    next: state.tripReport.userTripReports.next,\n    fetched: state.user.fetched,\n    fetchingNext: state.tripReport.fetchingNext,\n    searchedCountry: state.country.country,\n    showEditProfileModal: state.modal.showEditProfileModal,\n    modalProfile: state.modal.modalProfile,\n    userCountries: state.user.user.countries,\n    showCountryModal: state.modal.showCountryModal,\n    modalCountry: state.modal.modalCountry,\n    showPostModal: state.modal.showPostModal,\n    fetchingTripReports: state.tripReport.fetchingTripReports,\n    fetchedTripReports: state.tripReport.fetchedTripReports,\n    tripReports: state.tripReport.userTripReports.results,\n    updatePostModal: state.modal.updatePostModal,\n    modalPost: state.modal.modalPost,\n    showConfirmDeleteModal: state.modal.showConfirmDeleteModal,\n    showTripReportModal: state.modal.showTripReportModal\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return bindActionCreators({\n    fetchCountry: fetchCountry,\n    putUserData: putUserData,\n    openEditProfileModal: openEditProfileModal,\n    closeEditProfileModal: closeEditProfileModal,\n    openCountryModal: openCountryModal,\n    closeCountryModal: closeCountryModal,\n    removeError: removeError,\n    fetchUserTripReports: fetchUserTripReports,\n    postTripReport: postTripReport,\n    deleteTripReport: deleteTripReport,\n    updateTripReport: updateTripReport,\n    openPostModal: openPostModal,\n    closePostModal: closePostModal,\n    openUpdatePostModal: openUpdatePostModal,\n    openConfirmDeleteModal: openConfirmDeleteModal,\n    closeConfirmDeleteModal: closeConfirmDeleteModal,\n    openTripReportModal: openTripReportModal,\n    closeTripReportModal: closeTripReportModal,\n    fetchNextUserTripReports: fetchNextUserTripReports\n  }, dispatch);\n};\n\nexport default connect(mapState, mapDispatch)(Profile);\nProfile.propTypes = {\n  user: PropTypes.object,\n  next: PropTypes.string,\n  fetched: PropTypes.bool,\n  fetchingNext: PropTypes.bool,\n  searchedCountry: PropTypes.array,\n  showEditProfileModal: PropTypes.bool,\n  modalProfile: PropTypes.object,\n  userCountries: PropTypes.array,\n  showCountryModal: PropTypes.bool,\n  modalCountry: PropTypes.object,\n  showPostModal: PropTypes.bool,\n  fetchingTripReports: PropTypes.bool,\n  fetchedTripReports: PropTypes.bool,\n  tripReports: PropTypes.array,\n  updatePostModal: PropTypes.bool,\n  modalPost: PropTypes.object,\n  showConfirmDeleteModal: PropTypes.bool,\n  showTripReportModal: PropTypes.bool,\n  fetchCountry: PropTypes.func,\n  putUserData: PropTypes.func,\n  openEditProfileModal: PropTypes.func,\n  closeEditProfileModal: PropTypes.func,\n  openCountryModal: PropTypes.func,\n  closeCountryModal: PropTypes.func,\n  removeError: PropTypes.func,\n  fetchUserTripReports: PropTypes.func,\n  postTripReport: PropTypes.func,\n  deleteTripReport: PropTypes.func,\n  updateTripReport: PropTypes.func,\n  openPostModal: PropTypes.func,\n  closePostModal: PropTypes.func,\n  openUpdatePostModal: PropTypes.func,\n  openConfirmDeleteModal: PropTypes.func,\n  closeConfirmDeleteModal: PropTypes.func,\n  openTripReportModal: PropTypes.func,\n  closeTripReportModal: PropTypes.func,\n  fetchNextUserTripReports: PropTypes.func\n};","map":{"version":3,"sources":["/Users/peterzernia/projects/countries/src/containers/Profile.js"],"names":["React","Component","bindActionCreators","PropTypes","connect","GoogleMap","EditProfileModal","openEditProfileModal","closeEditProfileModal","putUserData","fetchCountry","fetchNextUserTripReports","Button","Avatar","Typography","CountryModal","PostModal","TripReportThumbnail","TripReportModal","ConfirmDeleteModal","fetchUserTripReports","postTripReport","deleteTripReport","updateTripReport","openPostModal","closePostModal","openUpdatePostModal","openCountryModal","closeCountryModal","openConfirmDeleteModal","closeConfirmDeleteModal","openTripReportModal","closeTripReportModal","removeError","DotLoader","IconButton","Grid","Add","Tooltip","Profile","handlePostSubmit","e","preventDefault","countries","target","value","split","map","Number","props","user","pk","title","content","handleUpdateSubmit","modalPost","id","handleSubmit","userCountryList","userCountries","country","username","email","biography","listTripReports","tripReports","tripReport","fetched","marginBottom","width","home","height","margin","flag","textAlign","padding","maxWidth","size","author","fetchingTripReports","fetchedTripReports","fetchingNext","next","mapState","state","userTripReports","searchedCountry","showEditProfileModal","modal","modalProfile","showCountryModal","modalCountry","showPostModal","results","updatePostModal","showConfirmDeleteModal","showTripReportModal","mapDispatch","dispatch","propTypes","object","string","bool","array","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { bindActionCreators } from 'redux'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport GoogleMap from '../components/GoogleMap'\nimport EditProfileModal from '../components/EditProfileModal'\nimport { openEditProfileModal, closeEditProfileModal } from '../actions/modalActions'\nimport { putUserData } from '../actions/userActions'\nimport { fetchCountry } from '../actions/countryActions'\nimport { fetchNextUserTripReports } from '../actions/tripReportActions'\nimport Button from '@material-ui/core/Button'\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\nimport CountryModal from '../components/CountryModal'\nimport PostModal from '../components/PostModal'\nimport TripReportThumbnail from '../components/TripReportThumbnail'\nimport TripReportModal from '../components/TripReportModal'\nimport ConfirmDeleteModal from '../components/ConfirmDeleteModal'\nimport { fetchUserTripReports, postTripReport, deleteTripReport, updateTripReport } from '../actions/tripReportActions'\nimport { openPostModal, closePostModal, openUpdatePostModal, openCountryModal,\n         closeCountryModal, openConfirmDeleteModal, closeConfirmDeleteModal,\n         openTripReportModal, closeTripReportModal } from '../actions/modalActions'\nimport { removeError } from '../actions/errorActions'\nimport { DotLoader } from 'react-spinners'\nimport IconButton from '@material-ui/core/IconButton'\nimport Grid from '@material-ui/core/Grid'\nimport Add from '@material-ui/icons/Add'\nimport Tooltip from '@material-ui/core/Tooltip';\n\nclass Profile extends Component {\n\n  componentWillUnmount() {\n    this.props.removeError();\n  }\n\n  /*\n  handlPostSubmit will create a new trip report and handleUpdateSubmit will\n  update an existing trip report. Both functions are passed into the Post Modal.\n  If the Post Modal is opened with openPostModal, this.props.updatePostModal\n  remains false and the blank form is displayed, and the submit button will\n  create a new post. If the Post Modal is openeed with openUpdatePostModal,\n  this.props.updatePostModal will flip to true, and the pre-filled in form will\n  display and the submit button will update the existing trip report.\n  */\n  handlePostSubmit = (e) => {\n    e.preventDefault();\n    // e.target.countries.value must be split at the comma and then strings\n    // must be converted into numbers.\n    let countries;\n    if (e.target.countries.value !== '') {\n      countries = e.target.countries.value.split(',').map(Number);\n    }\n    this.props.postTripReport(\n      this.props.user.pk,\n      e.target.title.value,\n      e.target.content.value,\n      countries\n    );\n    this.props.closePostModal();\n  }\n\n  handleUpdateSubmit = (e) => {\n    e.preventDefault();\n    let countries;\n    if (e.target.countries.value !== '') {\n      countries = e.target.countries.value.split(',').map(Number);\n    }\n    this.props.updateTripReport(\n      this.props.modalPost.id,\n      this.props.user.pk,\n      e.target.title.value,\n      e.target.content.value,\n      countries\n    );\n    this.props.closePostModal();\n  }\n\n  /*\n  This handle submit works with the edit profile modal.\n  */\n  handleSubmit = (e) => {\n    e.preventDefault();\n    let userCountryList = this.props.userCountries.map(country => country.id);\n    this.props.putUserData(\n      e.target.username.value,\n      e.target.email.value,\n      userCountryList,\n      Number(e.target.country.value),\n      e.target.biography.value\n    );\n    this.props.closeEditProfileModal();\n  }\n\n  render(){\n\n    let listTripReports = null;\n    if (this.props.tripReports){\n      listTripReports = this.props.tripReports.map(tripReport =>(\n        <Grid item key={tripReport.id}>\n          <TripReportThumbnail tripReport={tripReport} {...this.props} />\n        </Grid>\n      ));\n    }\n\n    return(\n      <div className='content'>\n        {this.props.fetched && <CountryModal {...this.props} />}\n        <EditProfileModal handleSubmit={this.handleSubmit} {...this.props} />\n        <div className='wrap' style={{ marginBottom: 60 }} >\n          <div className='left' style={{ width: '37%' }}>\n            {this.props.user.home && <Avatar style={{ width: 150, height: 150, margin: '0 auto' }} src={this.props.user.home.flag}/>}\n          </div>\n          <div className='right' style={{textAlign: 'left', width: '63%', padding: 10 }}>\n            <div style={{ height: 30 }}>\n            <Typography variant=\"h4\" gutterBottom>\n              {this.props.user.username}\n            </Typography>\n            </div><br/>\n            <div style={{ height: 30 }}>\n              <Button size='small' variant='outlined' onClick={() => this.props.openEditProfileModal(this.props.user)}>\n                Edit Profile\n              </Button>\n            </div><br/>\n            <div style={{ height: 30, maxWidth: '75%' }}>\n              {this.props.user.biography}\n            </div>\n          </div>\n        </div>\n        <hr style={{width: '85%', size: 1}}/>\n        {this.props.fetched && <GoogleMap {...this.props}/>}\n        <hr style={{width: '85%', size: 1}}/>\n        <div className=\"content\">\n          <Tooltip title=\"New Trip Report\">\n            <IconButton variant=\"contained\" aria-label=\"New Trip Report\" onClick={this.props.openPostModal}>\n              <Add />\n            </IconButton>\n          </Tooltip>\n          <PostModal {...this.props} handlePostSubmit={this.handlePostSubmit} handleUpdateSubmit={this.handleUpdateSubmit} />\n          <ConfirmDeleteModal {...this.props} />\n          {this.props.modalPost.author && <TripReportModal {...this.props} />}\n          {this.props.fetchingTripReports && <div><DotLoader size={50} color={'#2196f3'} className=\"content\" /></div>}\n          {this.props.fetchedTripReports && <Grid container spacing={24} justify='center' >{listTripReports}</Grid>}\n          {this.props.fetchingNext && <DotLoader size={50} color={'#2196f3'} className=\"content\" />}\n          {this.props.next && <Button onClick={() => this.props.fetchNextUserTripReports(this.props.next)}>Load More</Button>}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = state => {\n  return {\n    user: state.user.user,\n    next: state.tripReport.userTripReports.next,\n    fetched: state.user.fetched,\n    fetchingNext: state.tripReport.fetchingNext,\n    searchedCountry: state.country.country,\n    showEditProfileModal: state.modal.showEditProfileModal,\n    modalProfile: state.modal.modalProfile,\n    userCountries: state.user.user.countries,\n    showCountryModal: state.modal.showCountryModal,\n    modalCountry: state.modal.modalCountry,\n    showPostModal: state.modal.showPostModal,\n    fetchingTripReports: state.tripReport.fetchingTripReports,\n    fetchedTripReports: state.tripReport.fetchedTripReports,\n    tripReports: state.tripReport.userTripReports.results,\n    updatePostModal: state.modal.updatePostModal,\n    modalPost: state.modal.modalPost,\n    showConfirmDeleteModal: state.modal.showConfirmDeleteModal,\n    showTripReportModal: state.modal.showTripReportModal\n  };\n}\n\nconst mapDispatch = dispatch => {\n  return bindActionCreators({\n    fetchCountry,\n    putUserData,\n    openEditProfileModal,\n    closeEditProfileModal,\n    openCountryModal,\n    closeCountryModal,\n    removeError,\n    fetchUserTripReports,\n    postTripReport,\n    deleteTripReport,\n    updateTripReport,\n    openPostModal,\n    closePostModal,\n    openUpdatePostModal,\n    openConfirmDeleteModal,\n    closeConfirmDeleteModal,\n    openTripReportModal,\n    closeTripReportModal,\n    fetchNextUserTripReports,\n  }, dispatch);\n}\n\nexport default connect(mapState, mapDispatch)(Profile);\n\nProfile.propTypes = {\n  user: PropTypes.object,\n  next: PropTypes.string,\n  fetched: PropTypes.bool,\n  fetchingNext: PropTypes.bool,\n  searchedCountry: PropTypes.array,\n  showEditProfileModal: PropTypes.bool,\n  modalProfile: PropTypes.object,\n  userCountries: PropTypes.array,\n  showCountryModal: PropTypes.bool,\n  modalCountry: PropTypes.object,\n  showPostModal: PropTypes.bool,\n  fetchingTripReports: PropTypes.bool,\n  fetchedTripReports: PropTypes.bool,\n  tripReports: PropTypes.array,\n  updatePostModal: PropTypes.bool,\n  modalPost: PropTypes.object,\n  showConfirmDeleteModal: PropTypes.bool,\n  showTripReportModal: PropTypes.bool,\n  fetchCountry: PropTypes.func,\n  putUserData: PropTypes.func,\n  openEditProfileModal: PropTypes.func,\n  closeEditProfileModal: PropTypes.func,\n  openCountryModal: PropTypes.func,\n  closeCountryModal: PropTypes.func,\n  removeError: PropTypes.func,\n  fetchUserTripReports: PropTypes.func,\n  postTripReport: PropTypes.func,\n  deleteTripReport: PropTypes.func,\n  updateTripReport: PropTypes.func,\n  openPostModal: PropTypes.func,\n  closePostModal: PropTypes.func,\n  openUpdatePostModal: PropTypes.func,\n  openConfirmDeleteModal: PropTypes.func,\n  closeConfirmDeleteModal: PropTypes.func,\n  openTripReportModal: PropTypes.func,\n  closeTripReportModal: PropTypes.func,\n  fetchNextUserTripReports: PropTypes.func\n};\n"]},"metadata":{},"sourceType":"module"}