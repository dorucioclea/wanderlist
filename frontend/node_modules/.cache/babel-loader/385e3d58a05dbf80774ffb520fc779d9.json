{"ast":null,"code":"import _classCallCheck from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/peterzernia/projects/countries/src/containers/Profile.js\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport GoogleMap from '../components/GoogleMap';\nimport EditProfileModal from '../components/EditProfileModal';\nimport Post from './Post';\nimport { openEditProfileModal, closeEditProfileModal } from '../actions/modalActions';\nimport { putUserData } from '../actions/userActions';\nimport { fetchCountry } from '../actions/countryActions';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport CountryModal from '../components/CountryModal';\nimport { openCountryModal, closeCountryModal } from '../actions/modalActions';\nimport { removeError } from '../actions/errorActions';\n\nvar Profile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Profile, _Component);\n\n  function Profile() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Profile)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handlePostSubmit = function (e) {\n      e.preventDefault(); // e.target.countries.value must be split at the comma and then strings\n      // must be converted into numbers.\n\n      var countries;\n\n      if (e.target.countries.value !== '') {\n        countries = e.target.countries.value.split(',').map(Number);\n      }\n\n      _this.props.postTripReport(_this.props.pk, e.target.title.value, e.target.content.value, countries);\n\n      _this.props.closePostModal();\n    };\n\n    _this.handleUpdateSubmit = function (e) {\n      e.preventDefault();\n      var countries;\n\n      if (e.target.countries.value !== '') {\n        countries = e.target.countries.value.split(',').map(Number);\n      }\n\n      _this.props.updateTripReport(_this.props.modalPost.id, _this.props.pk, e.target.title.value, e.target.content.value, countries);\n\n      _this.props.closePostModal();\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      var userCountryList = _this.props.userCountries.map(function (country) {\n        return country.id;\n      });\n\n      _this.props.putUserData(e.target.username.value, e.target.email.value, userCountryList, Number(e.target.country.value), e.target.biography.value);\n\n      _this.props.closeEditProfileModal();\n    };\n\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.removeError();\n    }\n    /*\n    handlPostSubmit will create a new trip report and handleUpdateSubmit will\n    update an existing trip report. Both functions are passed into the Post Modal.\n    If the Post Modal is opened with openPostModal, this.props.updatePostModal\n    remains false and the blank form is displayed, and the submit button will\n    create a new post. If the Post Modal is openeed with openUpdatePostModal,\n    this.props.updatePostModal will flip to true, and the pre-filled in form will\n    display and the submit button will update the existing trip report.\n    */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, this.props.fetched && React.createElement(CountryModal, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })), React.createElement(EditProfileModal, Object.assign({\n        handleSubmit: this.handleSubmit\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"wrap\",\n        style: {\n          marginBottom: 60\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"left\",\n        style: {\n          width: '37%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, this.props.user.home && React.createElement(Avatar, {\n        style: {\n          width: 150,\n          height: 150,\n          margin: '0 auto'\n        },\n        src: this.props.user.home.flag,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"right\",\n        style: {\n          textAlign: 'left',\n          width: '63%',\n          padding: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          height: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, this.props.user.username)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          height: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"small\",\n        variant: \"outlined\",\n        onClick: function onClick() {\n          return _this2.props.openEditProfileModal(_this2.props.user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Edit Profile\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          height: 30,\n          maxWidth: '75%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, this.props.biography))), React.createElement(\"hr\", {\n        style: {\n          width: '85%',\n          size: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), this.props.fetched && React.createElement(GoogleMap, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })), React.createElement(\"hr\", {\n        style: {\n          width: '85%',\n          size: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(Post, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nvar mapState = function mapState(state) {\n  return {\n    user: state.user.user,\n    fetched: state.user.fetched,\n    biography: state.user.user.biography,\n    searchedCountry: state.country.country,\n    showEditProfileModal: state.modal.showEditProfileModal,\n    modalProfile: state.modal.modalProfile,\n    userCountries: state.user.user.countries,\n    showCountryModal: state.modal.showCountryModal,\n    modalCountry: state.modal.modalCountry\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return bindActionCreators({\n    fetchCountry: fetchCountry,\n    putUserData: putUserData,\n    openEditProfileModal: openEditProfileModal,\n    closeEditProfileModal: closeEditProfileModal,\n    openCountryModal: openCountryModal,\n    closeCountryModal: closeCountryModal,\n    removeError: removeError\n  }, dispatch);\n};\n\nexport default connect(mapState, mapDispatch)(Profile);\nProfile.propTypes = {\n  user: PropTypes.object,\n  fetched: PropTypes.bool,\n  biography: PropTypes.string,\n  searchedCountry: PropTypes.array,\n  showEditProfileModal: PropTypes.bool,\n  modalProfile: PropTypes.object,\n  userCountries: PropTypes.array,\n  showCountryModal: PropTypes.bool,\n  modalCountry: PropTypes.object,\n  fetchCountry: PropTypes.func,\n  putUserData: PropTypes.func,\n  openEditProfileModal: PropTypes.func,\n  closeEditProfileModal: PropTypes.func,\n  openCountryModal: PropTypes.func,\n  closeCountryModal: PropTypes.func,\n  removeError: PropTypes.func\n};","map":{"version":3,"sources":["/Users/peterzernia/projects/countries/src/containers/Profile.js"],"names":["React","Component","bindActionCreators","PropTypes","connect","GoogleMap","EditProfileModal","Post","openEditProfileModal","closeEditProfileModal","putUserData","fetchCountry","Button","Avatar","Typography","CountryModal","openCountryModal","closeCountryModal","removeError","Profile","handlePostSubmit","e","preventDefault","countries","target","value","split","map","Number","props","postTripReport","pk","title","content","closePostModal","handleUpdateSubmit","updateTripReport","modalPost","id","handleSubmit","userCountryList","userCountries","country","username","email","biography","fetched","marginBottom","width","user","home","height","margin","flag","textAlign","padding","maxWidth","size","mapState","state","searchedCountry","showEditProfileModal","modal","modalProfile","showCountryModal","modalCountry","mapDispatch","dispatch","propTypes","object","bool","string","array","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { bindActionCreators } from 'redux'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport GoogleMap from '../components/GoogleMap'\nimport EditProfileModal from '../components/EditProfileModal'\nimport Post from './Post'\nimport { openEditProfileModal, closeEditProfileModal } from '../actions/modalActions'\nimport { putUserData } from '../actions/userActions'\nimport { fetchCountry } from '../actions/countryActions'\nimport Button from '@material-ui/core/Button'\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\nimport CountryModal from '../components/CountryModal'\nimport { openCountryModal, closeCountryModal } from '../actions/modalActions'\nimport { removeError } from '../actions/errorActions'\n\nclass Profile extends Component {\n\n  componentWillUnmount() {\n    this.props.removeError();\n  }\n\n  /*\n  handlPostSubmit will create a new trip report and handleUpdateSubmit will\n  update an existing trip report. Both functions are passed into the Post Modal.\n  If the Post Modal is opened with openPostModal, this.props.updatePostModal\n  remains false and the blank form is displayed, and the submit button will\n  create a new post. If the Post Modal is openeed with openUpdatePostModal,\n  this.props.updatePostModal will flip to true, and the pre-filled in form will\n  display and the submit button will update the existing trip report.\n  */\n  handlePostSubmit = (e) => {\n    e.preventDefault();\n    // e.target.countries.value must be split at the comma and then strings\n    // must be converted into numbers.\n    let countries;\n    if (e.target.countries.value !== '') {\n      countries = e.target.countries.value.split(',').map(Number);\n    }\n    this.props.postTripReport(\n      this.props.pk,\n      e.target.title.value,\n      e.target.content.value,\n      countries\n    );\n    this.props.closePostModal();\n  }\n\n  handleUpdateSubmit = (e) => {\n    e.preventDefault();\n    let countries;\n    if (e.target.countries.value !== '') {\n      countries = e.target.countries.value.split(',').map(Number);\n    }\n    this.props.updateTripReport(\n      this.props.modalPost.id,\n      this.props.pk,\n      e.target.title.value,\n      e.target.content.value,\n      countries\n    );\n    this.props.closePostModal();\n  }\n\n  /*\n  This handle submit works with the edit profile modal. \n  */\n  handleSubmit = (e) => {\n    e.preventDefault();\n    let userCountryList = this.props.userCountries.map(country => country.id);\n    this.props.putUserData(\n      e.target.username.value,\n      e.target.email.value,\n      userCountryList,\n      Number(e.target.country.value),\n      e.target.biography.value\n    );\n    this.props.closeEditProfileModal();\n  }\n\n  render(){\n    return(\n      <div className='content'>\n        {this.props.fetched && <CountryModal {...this.props} />}\n        <EditProfileModal handleSubmit={this.handleSubmit} {...this.props} />\n        <div className='wrap' style={{ marginBottom: 60 }} >\n          <div className='left' style={{ width: '37%' }}>\n            {this.props.user.home && <Avatar style={{ width: 150, height: 150, margin: '0 auto' }} src={this.props.user.home.flag}/>}\n          </div>\n          <div className='right' style={{textAlign: 'left', width: '63%', padding: 10 }}>\n            <div style={{ height: 30 }}>\n            <Typography variant=\"h4\" gutterBottom>\n              {this.props.user.username}\n            </Typography>\n            </div><br/>\n            <div style={{ height: 30 }}>\n              <Button size='small' variant='outlined' onClick={() => this.props.openEditProfileModal(this.props.user)}>\n                Edit Profile\n              </Button>\n            </div><br/>\n            <div style={{ height: 30, maxWidth: '75%' }}>\n              {this.props.biography}\n            </div>\n          </div>\n        </div>\n        <hr style={{width: '85%', size: 1}}/>\n        {this.props.fetched && <GoogleMap {...this.props}/>}\n        <hr style={{width: '85%', size: 1}}/>\n        <Post />\n      </div>\n    );\n  }\n}\n\nconst mapState = state => {\n  return {\n    user: state.user.user,\n    fetched: state.user.fetched,\n    biography: state.user.user.biography,\n    searchedCountry: state.country.country,\n    showEditProfileModal: state.modal.showEditProfileModal,\n    modalProfile: state.modal.modalProfile,\n    userCountries: state.user.user.countries,\n    showCountryModal: state.modal.showCountryModal,\n    modalCountry: state.modal.modalCountry,\n  };\n}\n\nconst mapDispatch = dispatch => {\n  return bindActionCreators({\n    fetchCountry,\n    putUserData,\n    openEditProfileModal,\n    closeEditProfileModal,\n    openCountryModal,\n    closeCountryModal,\n    removeError\n  }, dispatch);\n}\n\nexport default connect(mapState, mapDispatch)(Profile);\n\nProfile.propTypes = {\n  user: PropTypes.object,\n  fetched: PropTypes.bool,\n  biography: PropTypes.string,\n  searchedCountry: PropTypes.array,\n  showEditProfileModal: PropTypes.bool,\n  modalProfile: PropTypes.object,\n  userCountries: PropTypes.array,\n  showCountryModal: PropTypes.bool,\n  modalCountry: PropTypes.object,\n  fetchCountry: PropTypes.func,\n  putUserData: PropTypes.func,\n  openEditProfileModal: PropTypes.func,\n  closeEditProfileModal: PropTypes.func,\n  openCountryModal: PropTypes.func,\n  closeCountryModal: PropTypes.func,\n  removeError: PropTypes.func\n};\n"]},"metadata":{},"sourceType":"module"}