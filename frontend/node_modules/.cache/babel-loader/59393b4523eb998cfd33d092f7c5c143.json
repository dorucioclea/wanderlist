{"ast":null,"code":"import _classCallCheck from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/peterzernia/projects/countries/src/containers/Register.js\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { authRegister } from '../actions/authActions';\nimport { removeError } from '../actions/errorActions';\nimport RegistrationForm from '../components/RegistrationForm';\n\nvar Register =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Register, _Component);\n\n  function Register() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Register)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var country; // Js tries to convert empty string to 0 with Number, this prevents that,\n      // which POSTs an empty string instead of 0 to return the correct error\n      // if the Home Country field is left blank on registration.\n\n      if (e.target.country.value !== '') {\n        country = Number(e.target.country.value);\n      }\n\n      _this.props.authRegister(e.target.username.value, e.target.email.value, e.target.password1.value, e.target.password2.value, country);\n    };\n\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.removeError();\n    } // Registers the user.\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return (// If the user is authenticated on the Register page, it will redirect to\n        // the home page.\n        React.createElement(\"div\", {\n          className: \"content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, !this.props.authenticated ? React.createElement(RegistrationForm, Object.assign({\n          handleSubmit: this.handleSubmit\n        }, this.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        })) : React.createElement(Redirect, {\n          to: {\n            pathname: \"/\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }))\n      );\n    }\n  }]);\n\n  return Register;\n}(Component);\n\nvar mapState = function mapState(state) {\n  return {\n    authenticating: state.auth.authenticating,\n    authenticated: state.auth.authenticated\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return bindActionCreators({\n    authRegister: authRegister,\n    removeError: removeError\n  }, dispatch);\n};\n\nexport default connect(mapState, mapDispatch)(Register);\nRegister.propTypes = {\n  authenticating: PropTypes.bool,\n  authenticated: PropTypes.bool,\n  authRegister: PropTypes.func\n};","map":{"version":3,"sources":["/Users/peterzernia/projects/countries/src/containers/Register.js"],"names":["React","Component","bindActionCreators","connect","PropTypes","Redirect","authRegister","removeError","RegistrationForm","Register","handleSubmit","e","preventDefault","country","target","value","Number","props","username","email","password1","password2","authenticated","pathname","mapState","state","authenticating","auth","mapDispatch","dispatch","propTypes","bool","func"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,SAASC,YAAT,QAA6B,wBAA7B;AACA,SAASC,WAAT,QAA4B,yBAA5B;AAEA,OAAOC,gBAAP,MAA6B,gCAA7B;;IAEMC,Q;;;;;;;;;;;;;;;;;;UAOJC,Y,GAAe,UAACC,CAAD,EAAO;AACpBA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAIC,OAAJ,CAFoB,CAGpB;AACA;AACA;;AACA,UAAIF,CAAC,CAACG,MAAF,CAASD,OAAT,CAAiBE,KAAjB,KAA2B,EAA/B,EAAmC;AACjCF,QAAAA,OAAO,GAAGG,MAAM,CAACL,CAAC,CAACG,MAAF,CAASD,OAAT,CAAiBE,KAAlB,CAAhB;AACD;;AACD,YAAKE,KAAL,CAAWX,YAAX,CACEK,CAAC,CAACG,MAAF,CAASI,QAAT,CAAkBH,KADpB,EAEEJ,CAAC,CAACG,MAAF,CAASK,KAAT,CAAeJ,KAFjB,EAGEJ,CAAC,CAACG,MAAF,CAASM,SAAT,CAAmBL,KAHrB,EAIEJ,CAAC,CAACG,MAAF,CAASO,SAAT,CAAmBN,KAJrB,EAKEF,OALF;AAOD,K;;;;;;;2CArBsB;AACrB,WAAKI,KAAL,CAAWV,WAAX;AACD,K,CAED;;;;6BAkBQ;AACN,aACE;AACA;AACA;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEE,CAAC,KAAKU,KAAL,CAAWK,aAAZ,GACE,oBAAC,gBAAD;AAAkB,UAAA,YAAY,EAAE,KAAKZ;AAArC,WAAuD,KAAKO,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,GAEE,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAACM,YAAAA,QAAQ,EAAE;AAAX,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJJ;AAHF;AAWD;;;;EApCoBtB,S;;AAuCvB,IAAMuB,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AACxB,SAAO;AACLC,IAAAA,cAAc,EAAED,KAAK,CAACE,IAAN,CAAWD,cADtB;AAELJ,IAAAA,aAAa,EAAEG,KAAK,CAACE,IAAN,CAAWL;AAFrB,GAAP;AAID,CALD;;AAOA,IAAMM,WAAW,GAAG,SAAdA,WAAc,CAAAC,QAAQ,EAAI;AAC9B,SAAO3B,kBAAkB,CAAC;AACxBI,IAAAA,YAAY,EAAZA,YADwB;AAExBC,IAAAA,WAAW,EAAXA;AAFwB,GAAD,EAGtBsB,QAHsB,CAAzB;AAID,CALD;;AAOA,eAAe1B,OAAO,CAACqB,QAAD,EAAWI,WAAX,CAAP,CAA+BnB,QAA/B,CAAf;AAEAA,QAAQ,CAACqB,SAAT,GAAqB;AACnBJ,EAAAA,cAAc,EAAEtB,SAAS,CAAC2B,IADP;AAEnBT,EAAAA,aAAa,EAAElB,SAAS,CAAC2B,IAFN;AAGnBzB,EAAAA,YAAY,EAAEF,SAAS,CAAC4B;AAHL,CAArB","sourcesContent":["import React, { Component } from 'react'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { Redirect } from 'react-router-dom';\n\nimport { authRegister } from '../actions/authActions'\nimport { removeError } from '../actions/errorActions'\n\nimport RegistrationForm from '../components/RegistrationForm'\n\nclass Register extends Component {\n\n  componentWillUnmount() {\n    this.props.removeError();\n  }\n\n  // Registers the user.\n  handleSubmit = (e) => {\n    e.preventDefault();\n    let country;\n    // Js tries to convert empty string to 0 with Number, this prevents that,\n    // which POSTs an empty string instead of 0 to return the correct error\n    // if the Home Country field is left blank on registration.\n    if (e.target.country.value !== '') {\n      country = Number(e.target.country.value)\n    }\n    this.props.authRegister(\n      e.target.username.value,\n      e.target.email.value,\n      e.target.password1.value,\n      e.target.password2.value,\n      country\n    );\n  }\n  render(){\n    return(\n      // If the user is authenticated on the Register page, it will redirect to\n      // the home page.\n      <div className=\"content\">\n      {\n        !this.props.authenticated\n        ? <RegistrationForm handleSubmit={this.handleSubmit} {...this.props}/>\n        : <Redirect to={{pathname: \"/\",}} />\n      }\n      </div>\n    );\n  }\n}\n\nconst mapState = state => {\n  return {\n    authenticating: state.auth.authenticating,\n    authenticated: state.auth.authenticated,\n  };\n}\n\nconst mapDispatch = dispatch => {\n  return bindActionCreators({\n    authRegister,\n    removeError\n  }, dispatch);\n}\n\nexport default connect(mapState, mapDispatch)(Register);\n\nRegister.propTypes = {\n  authenticating: PropTypes.bool,\n  authenticated: PropTypes.bool,\n  authRegister: PropTypes.func\n};\n"]},"metadata":{},"sourceType":"module"}