{"ast":null,"code":"import axios from 'axios'; // Fetch authenticated user axios action creators\n\nexport var fetchUserPending = function fetchUserPending() {\n  return {\n    type: \"FETCH_USER_PENDING\"\n  };\n};\nexport var fetchUserFulfilled = function fetchUserFulfilled(user) {\n  return {\n    type: \"FETCH_USER_FULFILLED\",\n    user: user\n  };\n};\nexport var fetchUserRejected = function fetchUserRejected() {\n  return {\n    type: \"FETCH_USER_REJECTED\"\n  };\n}; // PUT user axios actions for updating user information action creators\n\nexport var putUserDataFulfilled = function putUserDataFulfilled(user) {\n  return {\n    type: \"PUT_USER_DATA_FULFILLED\",\n    user: user\n  };\n};\nexport var putUserDataRejected = function putUserDataRejected() {\n  return {\n    type: \"PUT_USER_DATA_REJECTED\"\n  };\n}; // Fetch single user axios actions for viewing proflile\n\nexport var fetchSingleUserPending = function fetchSingleUserPending() {\n  return {\n    type: \"FETCH_SINGLE_USER_PENDING\"\n  };\n};\nexport var fetchSingleUserFulfilled = function fetchSingleUserFulfilled(user) {\n  return {\n    type: \"FETCH_SINGLE_USER_FULFILLED\",\n    user: user\n  };\n};\nexport var fetchSingleUserRejected = function fetchSingleUserRejected() {\n  return {\n    type: \"FETCH_SINGLE_USER_REJECTED\"\n  };\n}; // GET requests the Django REST API, which returns authenticated user object.\n\nexport var fetchUser = function fetchUser() {\n  var token = localStorage.getItem('token');\n  return function (dispatch) {\n    dispatch(fetchUserPending());\n    axios.get(\"\".concat(process.env.REACT_APP_API_URL, \"/api/v1/rest-auth/user/\"), {\n      headers: {\n        'Authorization': \"Token \".concat(token)\n      }\n    }).then(function (response) {\n      var user = response.data;\n      dispatch(fetchUserFulfilled(user));\n    }).catch(function (err) {\n      dispatch(fetchUserRejected());\n      dispatch({\n        type: \"ADD_ERROR\",\n        error: err\n      });\n    });\n  };\n}; // PUT requests the Django REST API to update user object.\n\nexport var putUserData = function putUserData(username, email, countries, home, biography, success) {\n  var token = localStorage.getItem('token');\n  return function (dispatch) {\n    axios.put(\"\".concat(process.env.REACT_APP_API_URL, \"/api/v1/rest-auth/user/\"), {\n      username: username,\n      email: email,\n      countries: countries,\n      home: home,\n      biography: biography\n    }, {\n      headers: {\n        'Authorization': \"Token \".concat(token)\n      }\n    }).then(function (response) {\n      var user = response.data;\n      dispatch(putUserDataFulfilled(user));\n      dispatch({\n        type: \"ADD_SUCCESS\",\n        success: success\n      });\n    }).catch(function (err) {\n      dispatch(putUserDataRejected());\n      dispatch({\n        type: \"ADD_ERROR\",\n        error: err\n      });\n    });\n  };\n}; // GET requests the Django REST API, which returns user object from List View.\n\nexport var fetchSingleUser = function fetchSingleUser(username) {\n  return function (dispatch) {\n    dispatch(fetchSingleUserPending());\n    axios.get(\"\".concat(process.env.REACT_APP_API_URL, \"/api/v1/users/?search=\").concat(username)).then(function (response) {\n      var user = response.data;\n      dispatch(fetchSingleUserFulfilled(user));\n    }).catch(function (err) {\n      dispatch(fetchSingleUserRejected());\n      dispatch({\n        type: \"ADD_ERROR\",\n        error: err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/peterzernia/projects/wanderlist/src/actions/userActions.js"],"names":["axios","fetchUserPending","type","fetchUserFulfilled","user","fetchUserRejected","putUserDataFulfilled","putUserDataRejected","fetchSingleUserPending","fetchSingleUserFulfilled","fetchSingleUserRejected","fetchUser","token","localStorage","getItem","dispatch","get","process","env","REACT_APP_API_URL","headers","then","response","data","catch","err","error","putUserData","username","email","countries","home","biography","success","put","fetchSingleUser"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\n// Fetch authenticated user axios action creators\nexport const fetchUserPending = () => ({type: \"FETCH_USER_PENDING\"})\nexport const fetchUserFulfilled = user => ({type: \"FETCH_USER_FULFILLED\", user})\nexport const fetchUserRejected = () => ({type: \"FETCH_USER_REJECTED\"})\n\n// PUT user axios actions for updating user information action creators\nexport const putUserDataFulfilled = user => ({type: \"PUT_USER_DATA_FULFILLED\", user})\nexport const putUserDataRejected = () => ({type: \"PUT_USER_DATA_REJECTED\"})\n\n// Fetch single user axios actions for viewing proflile\nexport const fetchSingleUserPending = () => ({type: \"FETCH_SINGLE_USER_PENDING\"})\nexport const fetchSingleUserFulfilled = user => ({type: \"FETCH_SINGLE_USER_FULFILLED\", user})\nexport const fetchSingleUserRejected = () => ({type: \"FETCH_SINGLE_USER_REJECTED\"})\n\n// GET requests the Django REST API, which returns authenticated user object.\nexport const fetchUser = () => {\n  const token = localStorage.getItem('token');\n  return dispatch => {\n    dispatch(fetchUserPending());\n    axios.get(`${process.env.REACT_APP_API_URL}/api/v1/rest-auth/user/`, {headers: { 'Authorization': `Token ${token}`}})\n      .then(response => {\n        const user = response.data;\n        dispatch(fetchUserFulfilled(user));\n      })\n      .catch(err => {\n        dispatch(fetchUserRejected());\n        dispatch({type: \"ADD_ERROR\", error: err});\n      })\n  }\n}\n\n// PUT requests the Django REST API to update user object.\nexport const putUserData = (username, email, countries, home, biography, success) => {\n  const token = localStorage.getItem('token');\n  return dispatch => {\n    axios.put(\n      `${process.env.REACT_APP_API_URL}/api/v1/rest-auth/user/`,\n      {\n        username: username,\n        email: email,\n        countries: countries,\n        home: home,\n        biography: biography\n      },\n      {headers: { 'Authorization': `Token ${token}`}}\n  )\n      .then(response => {\n        const user = response.data;\n        dispatch(putUserDataFulfilled(user));\n        dispatch({type: \"ADD_SUCCESS\", success: success});\n      })\n      .catch(err => {\n        dispatch(putUserDataRejected());\n        dispatch({type: \"ADD_ERROR\", error: err});\n      })\n  }\n}\n\n// GET requests the Django REST API, which returns user object from List View.\nexport const fetchSingleUser = (username) => {\n  return dispatch => {\n    dispatch(fetchSingleUserPending());\n    axios.get(`${process.env.REACT_APP_API_URL}/api/v1/users/?search=${username}`)\n      .then(response => {\n        const user = response.data;\n        dispatch(fetchSingleUserFulfilled(user));\n      })\n      .catch(err => {\n        dispatch(fetchSingleUserRejected());\n        dispatch({type: \"ADD_ERROR\", error: err});\n      })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}