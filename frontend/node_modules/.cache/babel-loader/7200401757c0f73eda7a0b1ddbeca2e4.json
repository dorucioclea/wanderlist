{"ast":null,"code":"import _classCallCheck from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectWithoutProperties from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/peterzernia/projects/countries/src/components/SearchBar.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport countries from '../country_data';\nimport Autosuggest from 'react-autosuggest';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nvar getSuggestions = function getSuggestions(value) {\n  var inputValue = value.trim().toLowerCase();\n  var inputLength = inputValue.length;\n  return inputLength === 0 ? [] : countries.filter(function (country) {\n    return country.name.toLowerCase().slice(0, inputLength) === inputValue;\n  });\n};\n\nvar getSuggestionValue = function getSuggestionValue(suggestion) {\n  return suggestion.name;\n};\n\nfunction renderSuggestion(suggestion) {\n  return React.createElement(MenuItem, {\n    component: \"div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, suggestion.name));\n}\n\nfunction renderInputComponent(inputProps) {\n  var _inputProps$inputRef = inputProps.inputRef,\n      _inputRef = _inputProps$inputRef === void 0 ? function () {} : _inputProps$inputRef,\n      ref = inputProps.ref,\n      other = _objectWithoutProperties(inputProps, [\"inputRef\", \"ref\"]);\n\n  return React.createElement(TextField, Object.assign({\n    InputProps: {\n      inputRef: function inputRef(node) {\n        ref(node);\n\n        _inputRef(node);\n      }\n    }\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }));\n}\n\nvar SearchBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchBar, _Component);\n\n  function SearchBar() {\n    var _this;\n\n    _classCallCheck(this, SearchBar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchBar).call(this));\n\n    _this.onChange = function (event, _ref) {\n      var newValue = _ref.newValue;\n\n      _this.setState({\n        value: newValue\n      });\n    };\n\n    _this.onSuggestionsFetchRequested = function (_ref2) {\n      var value = _ref2.value;\n\n      _this.setState({\n        suggestions: getSuggestions(value)\n      });\n    };\n\n    _this.onSuggestionsClearRequested = function () {\n      _this.setState({\n        suggestions: []\n      });\n    };\n\n    _this.state = {\n      value: '',\n      suggestions: []\n    };\n    return _this;\n  }\n\n  _createClass(SearchBar, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          value = _this$state.value,\n          suggestions = _this$state.suggestions;\n      var inputProps = {\n        placeholder: 'Search for a Country',\n        value: value,\n        onChange: this.onChange\n      };\n      return React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.props.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Search for a Country\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(Autosuggest, {\n        style: {\n          maxWidth: 400\n        },\n        suggestions: suggestions,\n        onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\n        onSuggestionsClearRequested: this.onSuggestionsClearRequested,\n        getSuggestionValue: getSuggestionValue,\n        renderSuggestion: renderSuggestion,\n        renderInputComponent: renderInputComponent,\n        inputProps: inputProps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Search\")));\n    }\n  }]);\n\n  return SearchBar;\n}(Component);\n\n;\nexport default SearchBar;","map":{"version":3,"sources":["/Users/peterzernia/projects/countries/src/components/SearchBar.js"],"names":["React","Component","Button","Typography","countries","Autosuggest","TextField","MenuItem","getSuggestions","value","inputValue","trim","toLowerCase","inputLength","length","filter","country","name","slice","getSuggestionValue","suggestion","renderSuggestion","renderInputComponent","inputProps","inputRef","ref","other","node","SearchBar","onChange","event","newValue","setState","onSuggestionsFetchRequested","suggestions","onSuggestionsClearRequested","state","placeholder","props","handleSubmit","maxWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport countries from '../country_data'\nimport Autosuggest from 'react-autosuggest'\nimport TextField from '@material-ui/core/TextField'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nconst getSuggestions = value => {\n  const inputValue = value.trim().toLowerCase();\n  const inputLength = inputValue.length;\n  return inputLength === 0 ? [] : countries.filter(country =>\n    country.name.toLowerCase().slice(0, inputLength) === inputValue\n  );\n};\n\nconst getSuggestionValue = suggestion => suggestion.name;\n\nfunction renderSuggestion(suggestion) {\n  return (\n    <MenuItem component=\"div\">\n      <div>\n        {suggestion.name}\n      </div>\n    </MenuItem>\n  );\n}\n\nfunction renderInputComponent(inputProps) {\n  const { inputRef = () => {}, ref, ...other } = inputProps;\n  return (\n    <TextField\n      InputProps={{\n        inputRef: node => {\n          ref(node);\n          inputRef(node);\n        },\n      }}\n      {...other}\n    />\n  );\n}\n\nclass SearchBar extends Component {\n  constructor() {\n    super();\n    this.state = {\n      value: '',\n      suggestions: []\n    };\n  }\n\n  onChange = (event, { newValue }) => {\n    this.setState({\n      value: newValue\n    });\n  };\n\n  onSuggestionsFetchRequested = ({ value }) => {\n    this.setState({\n      suggestions: getSuggestions(value)\n    });\n  };\n\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: []\n    });\n  };\n\n  render() {\n    const { value, suggestions } = this.state;\n\n    const inputProps = {\n      placeholder: 'Search for a Country',\n      value,\n      onChange: this.onChange\n    };\n\n    return(\n      <div className='content'>\n        <form onSubmit={this.props.handleSubmit}>\n          <Typography variant=\"h4\" gutterBottom>\n            Search for a Country\n          </Typography><br/>\n          <Autosuggest\n            style={{ maxWidth: 400 }}\n            suggestions={suggestions}\n            onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n            onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n            getSuggestionValue={getSuggestionValue}\n            renderSuggestion={renderSuggestion}\n            renderInputComponent={renderInputComponent}\n            inputProps={inputProps}\n          />\n          <Button variant=\"contained\" color=\"primary\" type='submit'>Search</Button>\n        </form>\n      </div>\n    )\n  }\n};\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}