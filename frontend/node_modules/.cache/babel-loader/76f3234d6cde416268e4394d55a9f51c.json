{"ast":null,"code":"import axios from 'axios';\nexport var fetchUserPending = function fetchUserPending() {\n  return {\n    type: \"FETCH_USER_PENDING\"\n  };\n};\nexport var fetchUserFulfilled = function fetchUserFulfilled(user) {\n  return {\n    type: \"FETCH_USER_FULFILLED\",\n    user: user\n  };\n};\nexport var fetchUserRejected = function fetchUserRejected(error) {\n  return {\n    type: \"FETCH_USER_REJECTED\",\n    error: error\n  };\n};\nexport var putUserDataPending = function putUserDataPending() {\n  return {\n    type: \"PUT_USER_DATA_PENDING\"\n  };\n};\nexport var putUserDataFulfilled = function putUserDataFulfilled(user) {\n  return {\n    type: \"PUT_USER_DATA_FULFILLED\",\n    user: user\n  };\n};\nexport var putUserDataRejected = function putUserDataRejected(error) {\n  return {\n    type: \"PUT_USER_DATA_REJECTED\",\n    error: error\n  };\n};\n/*\nGET requests the Django REST API, which returns user object.\n*/\n\nexport var fetchUser = function fetchUser() {\n  var token = localStorage.getItem('token');\n  return function (dispatch) {\n    dispatch(fetchUserPending());\n    axios.get('http://localhost:8000/api/v1/rest-auth/user/', {\n      headers: {\n        'Authorization': \"Token \".concat(token)\n      }\n    }).then(function (response) {\n      var user = response.data;\n      dispatch(fetchUserFulfilled(user));\n    }).catch(function (err) {\n      dispatch(fetchUserRejected(err));\n    });\n  };\n};\nexport var putUserData = function putUserData(username, countries, email, home) {\n  var token = localStorage.getItem('token');\n  return function (dispatch) {\n    dispatch(putUserDataPending());\n    axios.put('http://localhost:8000/api/v1/rest-auth/user/', {\n      username: username,\n      countries: countries,\n      email: email,\n      home: home\n    }, {\n      headers: {\n        'Authorization': \"Token \".concat(token)\n      }\n    }).then(function (response) {\n      var user = response.data;\n      dispatch(putUserDataFulfilled(user));\n    }).catch(function (err) {\n      dispatch(putUserDataRejected(err));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/peterzernia/projects/countries/src/actions/userActions.js"],"names":["axios","fetchUserPending","type","fetchUserFulfilled","user","fetchUserRejected","error","putUserDataPending","putUserDataFulfilled","putUserDataRejected","fetchUser","token","localStorage","getItem","dispatch","get","headers","then","response","data","catch","err","putUserData","username","countries","email","home","put"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\nexport const fetchUserPending = () => {\n  return {\n    type: \"FETCH_USER_PENDING\"\n  }\n}\n\nexport const fetchUserFulfilled = user => {\n  return {\n    type: \"FETCH_USER_FULFILLED\",\n    user: user\n  }\n}\n\nexport const fetchUserRejected = error => {\n  return {\n    type: \"FETCH_USER_REJECTED\",\n    error: error\n  }\n}\n\nexport const putUserDataPending = () => {\n  return {\n    type: \"PUT_USER_DATA_PENDING\"\n  }\n}\n\nexport const putUserDataFulfilled = user => {\n  return {\n    type: \"PUT_USER_DATA_FULFILLED\",\n    user: user\n  }\n}\n\nexport const putUserDataRejected = error => {\n  return {\n    type: \"PUT_USER_DATA_REJECTED\",\n    error: error\n  }\n}\n\n/*\nGET requests the Django REST API, which returns user object.\n*/\nexport const fetchUser = () => {\n  const token = localStorage.getItem('token');\n  return dispatch => {\n    dispatch(fetchUserPending());\n    axios.get('http://localhost:8000/api/v1/rest-auth/user/', {headers: { 'Authorization': `Token ${token}`}})\n      .then(response => {\n        const user = response.data;\n        dispatch(fetchUserFulfilled(user));\n      })\n      .catch(err => {\n        dispatch(fetchUserRejected(err));\n      })\n  }\n}\n\nexport const putUserData = (username, countries, email, home) => {\n  const token = localStorage.getItem('token');\n  return dispatch => {\n    dispatch(putUserDataPending());\n    axios.put(\n      'http://localhost:8000/api/v1/rest-auth/user/',\n      {\n        username: username,\n        countries: countries,\n        email: email,\n        home: home\n      },\n      {headers: { 'Authorization': `Token ${token}`}}\n  )\n      .then(response => {\n        const user = response.data;\n        dispatch(putUserDataFulfilled(user));\n      })\n      .catch(err => {\n        dispatch(putUserDataRejected(err));\n      })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}