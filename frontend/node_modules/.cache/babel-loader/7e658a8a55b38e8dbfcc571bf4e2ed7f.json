{"ast":null,"code":"import _classCallCheck from \"/Users/peterzernia/projects/countries/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/peterzernia/projects/countries/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/peterzernia/projects/countries/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/peterzernia/projects/countries/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/peterzernia/projects/countries/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/peterzernia/projects/countries/frontend/src/containers/Map.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport GoogleMap from '../components/GooglaMap';\n\nvar Map =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Map, _Component);\n\n  function Map() {\n    _classCallCheck(this, Map);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Map).apply(this, arguments));\n  }\n\n  _createClass(Map, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, \"My Map\"), this.props.count === 0 ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, \" It looks like you haven't added any places yet. \") : null, React.createElement(GoogleMap, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Map;\n}(Component);\n\nvar mapState = function mapState(state) {\n  return {\n    userCountries: state.user.user.countries,\n    count: state.user.user.count\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {};\n};\n\nexport default connect(mapState, mapDispatch)(Map);","map":{"version":3,"sources":["/Users/peterzernia/projects/countries/frontend/src/containers/Map.js"],"names":["React","Component","connect","GoogleMap","Map","props","count","mapState","state","userCountries","user","countries","mapDispatch","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;IAEMC,G;;;;;;;;;;;;;6BACI;AAEN,aACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAGK,KAAKC,KAAL,CAAWC,KAAX,KAAqB,CAAtB,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DADF,GAEE,IALN,EAOE,oBAAC,SAAD,oBAAe,KAAKD,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAPF,CADF;AAWD;;;;EAdeJ,S;;AAiBlB,IAAMM,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AACxB,SAAO;AACLC,IAAAA,aAAa,EAAED,KAAK,CAACE,IAAN,CAAWA,IAAX,CAAgBC,SAD1B;AAELL,IAAAA,KAAK,EAAEE,KAAK,CAACE,IAAN,CAAWA,IAAX,CAAgBJ;AAFlB,GAAP;AAID,CALD;;AAOA,IAAMM,WAAW,GAAG,SAAdA,WAAc,CAAAC,QAAQ,EAAI;AAC9B,SAAO,EAAP;AAED,CAHD;;AAKA,eAAeX,OAAO,CAACK,QAAD,EAAWK,WAAX,CAAP,CAA+BR,GAA/B,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport GoogleMap from '../components/GooglaMap'\n\nclass Map extends Component {\n  render(){\n\n    return(\n      <div className=\"content\">\n        <h1>My Map</h1>\n        {\n          (this.props.count === 0)\n          ? <p> It looks like you haven't added any places yet. </p>\n          : null\n        }\n        <GoogleMap {...this.props} />\n      </div>\n    );\n  }\n}\n\nconst mapState = state => {\n  return {\n    userCountries: state.user.user.countries,\n    count: state.user.user.count\n  };\n}\n\nconst mapDispatch = dispatch => {\n  return {\n  };\n}\n\nexport default connect(mapState, mapDispatch)(Map);\n"]},"metadata":{},"sourceType":"module"}