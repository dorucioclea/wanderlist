{"ast":null,"code":"import _classCallCheck from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/peterzernia/projects/countries/src/containers/Profile.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ProfileModal from '../components/ProfileModal';\nimport { openProfileModal as _openProfileModal, closeProfileModal as _closeProfileModal } from '../actions/modalActions';\nimport { putUserData as _putUserData } from '../actions/userActions';\nimport { fetchCountry as _fetchCountry } from '../actions/countryActions';\n\nvar Profile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Profile, _Component);\n\n  function Profile() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Profile)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.putUserData(e.target.username.value, _this.props.userCountries, e.target.email.value, Number(e.target.country.value));\n\n      _closeProfileModal();\n    };\n\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var errorMessage = null;\n\n      if (this.props.error) {\n        errorMessage = React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, this.props.error.message);\n      }\n\n      return React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, errorMessage, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, this.props.user.username), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(ProfileModal, Object.assign({\n        handleSubmit: this.handleSubmit\n      }, this.props, {\n        errorMessage: this.errorMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: function onClick() {\n          return _this2.props.openProfileModal(_this2.props.user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"EditProfile\"));\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nvar mapState = function mapState(state) {\n  return {\n    user: state.user.user,\n    userCountries: state.user.user.countries,\n    searchedCountry: state.country.country,\n    showProfileModal: state.modal.showProfileModal,\n    modalProfile: state.modal.modalProfile\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    fetchCountry: function fetchCountry(query) {\n      return dispatch(_fetchCountry(query));\n    },\n    putUserData: function putUserData(username, countries, email, home) {\n      return dispatch(_putUserData(username, countries, email, home));\n    },\n    openProfileModal: function openProfileModal(user) {\n      return dispatch(_openProfileModal(user));\n    },\n    closeProfileModal: function closeProfileModal() {\n      return dispatch(_closeProfileModal());\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(Profile);\nProfile.propTypes = {\n  user: PropTypes.object,\n  userCountries: PropTypes.array,\n  searchedCountry: PropTypes.array,\n  showProfileModal: PropTypes.bool,\n  modalProfile: PropTypes.object,\n  fetchCountry: PropTypes.func,\n  putUserData: PropTypes.func,\n  openProfileModal: PropTypes.func,\n  closeProfileModal: PropTypes.func\n};","map":{"version":3,"sources":["/Users/peterzernia/projects/countries/src/containers/Profile.js"],"names":["React","Component","PropTypes","connect","ProfileModal","openProfileModal","closeProfileModal","putUserData","fetchCountry","Profile","handleSubmit","e","preventDefault","props","target","username","value","userCountries","email","Number","country","errorMessage","error","message","user","mapState","state","countries","searchedCountry","showProfileModal","modal","modalProfile","mapDispatch","dispatch","query","home","propTypes","object","array","bool","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport ProfileModal from '../components/ProfileModal'\nimport { openProfileModal, closeProfileModal } from '../actions/modalActions'\nimport { putUserData } from '../actions/userActions'\nimport { fetchCountry } from '../actions/countryActions'\n\n\nclass Profile extends Component {\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.putUserData(\n      e.target.username.value,\n      this.props.userCountries,\n      e.target.email.value,\n      Number(e.target.country.value)\n    );\n    closeProfileModal();\n  }\n\n  render(){\n\n    let errorMessage = null;\n    if (this.props.error) {\n      errorMessage = <p>{this.props.error.message}</p>\n    }\n\n    return(\n      <div className=\"content\">\n        {errorMessage}\n        <h1>{this.props.user.username}</h1>\n        <br/>\n        <ProfileModal handleSubmit={this.handleSubmit} {...this.props} errorMessage={this.errorMessage}/>\n        <button className=\"btn btn-primary\" onClick={() => this.props.openProfileModal(this.props.user)}>EditProfile</button>\n      </div>\n    );\n  }\n}\n\nconst mapState = state => {\n  return {\n    user: state.user.user,\n    userCountries: state.user.user.countries,\n    searchedCountry: state.country.country,\n    showProfileModal: state.modal.showProfileModal,\n    modalProfile: state.modal.modalProfile\n  };\n}\n\nconst mapDispatch = dispatch => {\n  return {\n    fetchCountry: (query) => dispatch(fetchCountry(query)),\n    putUserData: (username, countries, email, home) => dispatch(putUserData(username, countries, email, home)),\n    openProfileModal: (user) => dispatch(openProfileModal(user)),\n    closeProfileModal: () => dispatch(closeProfileModal())\n  };\n}\n\nexport default connect(mapState, mapDispatch)(Profile);\n\nProfile.propTypes = {\n  user: PropTypes.object,\n  userCountries: PropTypes.array,\n  searchedCountry: PropTypes.array,\n  showProfileModal: PropTypes.bool,\n  modalProfile: PropTypes.object,\n  fetchCountry: PropTypes.func,\n  putUserData: PropTypes.func,\n  openProfileModal: PropTypes.func,\n  closeProfileModal: PropTypes.func\n};\n"]},"metadata":{},"sourceType":"module"}