{"ast":null,"code":"import _classCallCheck from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/peterzernia/projects/countries/src/containers/Feed.js\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport CountryModal from '../components/CountryModal';\nimport TripReportTruncated from '../components/TripReportTruncated';\nimport { openCountryModal, closeCountryModal } from '../actions/modalActions';\nimport { fetchNextTripReports } from '../actions/tripReportActions';\nimport { removeError } from '../actions/errorActions';\nimport { DotLoader } from 'react-spinners';\nimport { toggleFavorite } from '../actions/favoriteActions';\n\nvar Home =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Home, _Component);\n\n  function Home() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Home)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onScroll = function () {\n      var element = document.getElementById('scroll');\n\n      if (_this.isBottom(element) && _this.props.next && !_this.props.fetchingNext) {\n        _this.props.fetchNextTripReports(_this.props.next);\n      }\n    };\n\n    _this.handleClick = function (e) {\n      e.preventDefault();\n\n      _this.props.toggleFavorite(e.target.id);\n    };\n\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"isBottom\",\n    // Returns True if the user has scrolled past the bottom.\n    value: function isBottom(el) {\n      return el.getBoundingClientRect().bottom <= window.innerHeight;\n    } // Adds event listener that checks for scrolling.\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener('scroll', this.onScroll);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.removeError();\n      document.removeEventListener('scroll', this.onScroll);\n    }\n    /*\n    If the user has scrolled to the bottom, AND there is next URL to load more\n    Trip Reports, AND the next Trip Reports are not already being fetched, the\n    next Trip Reports will be fetched i.e. infinite scrolling.\n    */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var listTripReports = null;\n\n      if (this.props.tripReports) {\n        listTripReports = this.props.tripReports.map(function (tripReport) {\n          return React.createElement(\"div\", {\n            key: tripReport.id,\n            style: {\n              marginBottom: 20\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, React.createElement(TripReportTruncated, Object.assign({\n            handleClick: _this2.handleClick\n          }, tripReport, {\n            openCountryModal: _this2.props.openCountryModal,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          })));\n        });\n      }\n\n      return React.createElement(\"div\", {\n        id: \"scroll\",\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, this.props.fetching && React.createElement(\"div\", {\n        className: \"centered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(DotLoader, {\n        size: 50,\n        color: '#2196f3',\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })), this.props.fetched && React.createElement(CountryModal, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })), this.props.fetched && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, listTripReports), React.createElement(\"div\", {\n        style: {\n          height: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), this.props.fetchingNext && React.createElement(DotLoader, {\n        size: 50,\n        color: '#2196f3',\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nvar mapState = function mapState(state) {\n  return {\n    fetched: state.tripReport.fetched,\n    fetching: state.tripReport.fetching,\n    next: state.tripReport.tripReports.next,\n    fetchingNext: state.tripReport.fetchingNext,\n    tripReports: state.tripReport.tripReports.results,\n    showCountryModal: state.modal.showCountryModal,\n    modalCountry: state.modal.modalCountry\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return bindActionCreators({\n    openCountryModal: openCountryModal,\n    closeCountryModal: closeCountryModal,\n    removeError: removeError,\n    fetchNextTripReports: fetchNextTripReports,\n    toggleFavorite: toggleFavorite\n  }, dispatch);\n};\n\nexport default connect(mapState, mapDispatch)(Home);\nHome.propTypes = {\n  fetched: PropTypes.bool,\n  fetching: PropTypes.bool,\n  next: PropTypes.string,\n  tripReports: PropTypes.array,\n  showCountryModal: PropTypes.bool,\n  modalCountry: PropTypes.object,\n  openCountryModal: PropTypes.func,\n  closeCountryModal: PropTypes.func,\n  removeError: PropTypes.func,\n  fetchNextTripReports: PropTypes.func,\n  toggleFavorite: PropTypes.func\n};","map":{"version":3,"sources":["/Users/peterzernia/projects/countries/src/containers/Feed.js"],"names":["React","Component","bindActionCreators","connect","PropTypes","CountryModal","TripReportTruncated","openCountryModal","closeCountryModal","fetchNextTripReports","removeError","DotLoader","toggleFavorite","Home","onScroll","element","document","getElementById","isBottom","props","next","fetchingNext","handleClick","e","preventDefault","target","id","el","getBoundingClientRect","bottom","window","innerHeight","addEventListener","removeEventListener","listTripReports","tripReports","map","tripReport","marginBottom","fetching","fetched","height","mapState","state","results","showCountryModal","modal","modalCountry","mapDispatch","dispatch","propTypes","bool","string","array","object","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { PropTypes } from 'prop-types'\nimport CountryModal from '../components/CountryModal'\nimport TripReportTruncated from '../components/TripReportTruncated'\nimport { openCountryModal, closeCountryModal } from '../actions/modalActions'\nimport { fetchNextTripReports } from '../actions/tripReportActions'\nimport { removeError } from '../actions/errorActions'\nimport { DotLoader } from 'react-spinners'\nimport { toggleFavorite } from '../actions/favoriteActions'\n\nclass Home extends Component {\n\n  // Returns True if the user has scrolled past the bottom.\n  isBottom(el) {\n    return el.getBoundingClientRect().bottom <= window.innerHeight;\n  }\n\n  // Adds event listener that checks for scrolling.\n  componentDidMount() {\n    document.addEventListener('scroll', this.onScroll);\n  }\n\n  componentWillUnmount() {\n    this.props.removeError();\n    document.removeEventListener('scroll', this.onScroll);\n  }\n\n  /*\n  If the user has scrolled to the bottom, AND there is next URL to load more\n  Trip Reports, AND the next Trip Reports are not already being fetched, the\n  next Trip Reports will be fetched i.e. infinite scrolling.\n  */\n  onScroll = () => {\n    const element = document.getElementById('scroll');\n    if (this.isBottom(element) && this.props.next && !this.props.fetchingNext) {\n      this.props.fetchNextTripReports(this.props.next);\n    }\n  };\n\n  handleClick = (e) => {\n    e.preventDefault();\n    this.props.toggleFavorite(e.target.id);\n  }\n\n  render(){\n\n    let listTripReports = null;\n    if (this.props.tripReports){\n      listTripReports = this.props.tripReports.map(tripReport =>(\n        <div key={tripReport.id} style={{ marginBottom: 20 }}>\n          <TripReportTruncated handleClick={this.handleClick} {...tripReport} openCountryModal={this.props.openCountryModal}/>\n        </div>\n      ));\n    }\n\n    return(\n      <div id='scroll' className=\"content\">\n        {this.props.fetching && <div className='centered'><DotLoader size={50} color={'#2196f3'} className=\"content\" /></div>}\n        {this.props.fetched && <CountryModal {...this.props} />}\n        {this.props.fetched && <div>{listTripReports}</div>}\n        <div style={{ height: 15 }}/>\n        {this.props.fetchingNext && <DotLoader size={50} color={'#2196f3'} className=\"content\" />}\n      </div>\n    );\n  }\n}\n\nconst mapState = state => {\n  return {\n    fetched: state.tripReport.fetched,\n    fetching: state.tripReport.fetching,\n    next: state.tripReport.tripReports.next,\n    fetchingNext: state.tripReport.fetchingNext,\n    tripReports: state.tripReport.tripReports.results,\n    showCountryModal: state.modal.showCountryModal,\n    modalCountry: state.modal.modalCountry\n  };\n}\n\nconst mapDispatch = dispatch => {\n  return bindActionCreators({\n    openCountryModal,\n    closeCountryModal,\n    removeError,\n    fetchNextTripReports,\n    toggleFavorite,\n  }, dispatch);\n}\n\nexport default connect(mapState, mapDispatch)(Home);\n\nHome.propTypes = {\n  fetched: PropTypes.bool,\n  fetching: PropTypes.bool,\n  next: PropTypes.string,\n  tripReports: PropTypes.array,\n  showCountryModal: PropTypes.bool,\n  modalCountry: PropTypes.object,\n  openCountryModal: PropTypes.func,\n  closeCountryModal: PropTypes.func,\n  removeError: PropTypes.func,\n  fetchNextTripReports: PropTypes.func,\n  toggleFavorite: PropTypes.func,\n};\n"]},"metadata":{},"sourceType":"module"}