{"ast":null,"code":"import _toConsumableArray from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar initialState = {\n  fetching: false,\n  fetched: false,\n  fetchingTripReports: false,\n  fetchedTripReports: false,\n  tripReports: [],\n  userTripReports: [],\n  error: null\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"FETCH_TRIP_REPORTS_PENDING\":\n      {\n        return _objectSpread({}, state, {\n          fetching: true\n        });\n      }\n\n    case \"FETCH_TRIP_REPORTS_FULFILLED\":\n      {\n        return _objectSpread({}, state, {\n          fetching: false,\n          fetched: true,\n          tripReports: action.tripReports\n        });\n      }\n\n    case \"FETCH_TRIP_REPORTS_REJECTED\":\n      {\n        return _objectSpread({}, state, {\n          fetching: false,\n          fetched: false,\n          error: action.error\n        });\n      }\n\n    case \"FETCH_USER_TRIP_REPORTS_PENDING\":\n      {\n        return _objectSpread({}, state, {\n          fetchingTripReports: true\n        });\n      }\n\n    case \"FETCH_USER_TRIP_REPORTS_FULFILLED\":\n      {\n        return _objectSpread({}, state, {\n          fetchingTripReports: false,\n          fetchedTripReports: true,\n          userTripReports: action.tripReports\n        });\n      }\n\n    case \"FETCH_USER_TRIP_REPORTS_REJECTED\":\n      {\n        return _objectSpread({}, state, {\n          fetchingTripReports: false,\n          fetchedTripReports: false,\n          error: action.error\n        });\n      }\n\n    case \"POST_TRIP_REPORTS_PENDING\":\n      {\n        return _objectSpread({}, state);\n      }\n\n    case \"POST_TRIP_REPORTS_FULFILLED\":\n      {\n        return _objectSpread({}, state, {\n          // The new trip report must be concatted into the first position of userTripReports and tripReports\n          userTripReports: _toConsumableArray(state.userTripReports).reverse().concat(action.response).reverse(),\n          tripReports: _toConsumableArray(state.tripReports).reverse().concat(action.response).reverse()\n        });\n      }\n\n    case \"POST_TRIP_REPORTS_REJECTED\":\n      {\n        return _objectSpread({}, state, {\n          error: action.error\n        });\n      }\n\n    case \"DELETE_TRIP_REPORTS_PENDING\":\n      {\n        return _objectSpread({}, state);\n      }\n\n    case \"DELETE_TRIP_REPORTS_FULFILLED\":\n      {\n        return _objectSpread({}, state, {\n          // Filters the deleted trip report out of userTripReports\n          userTripReports: state.userTripReports.filter(function (tripReport) {\n            return tripReport.id !== action.response.id;\n          }),\n          tripReports: state.tripReports.filter(function (tripReport) {\n            return tripReport.id !== action.response.id;\n          })\n        });\n      }\n\n    case \"DELETE_TRIP_REPORTS_REJECTED\":\n      {\n        return _objectSpread({}, state, {\n          error: action.error\n        });\n      }\n\n    case \"UPDATE_TRIP_REPORTS_PENDING\":\n      {\n        return _objectSpread({}, state);\n      }\n\n    case \"UPDATE_TRIP_REPORTS_FULFILLED\":\n      {\n        return _objectSpread({}, state, {\n          userTripReports: _toConsumableArray(state.tripReports).filter(function (tripReport) {\n            return tripReport.id !== action.response.id;\n          }).concat(action.response).sort(),\n          tripReports: _toConsumableArray(state.tripReports),\n          response: action.response\n        });\n      }\n\n    case \"UPDATE_TRIP_REPORTS_REJECTED\":\n      {\n        return _objectSpread({}, state, {\n          error: action.error\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/peterzernia/projects/countries/src/store/tripReport.js"],"names":["initialState","fetching","fetched","fetchingTripReports","fetchedTripReports","tripReports","userTripReports","error","state","action","type","reverse","concat","response","filter","tripReport","id","sort"],"mappings":"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","sourcesContent":["const initialState = {\n  fetching: false,\n  fetched: false,\n  fetchingTripReports: false,\n  fetchedTripReports: false,\n  tripReports: [],\n  userTripReports: [],\n  error: null,\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case \"FETCH_TRIP_REPORTS_PENDING\": {\n      return {\n        ...state,\n        fetching: true\n      }\n    }\n    case \"FETCH_TRIP_REPORTS_FULFILLED\": {\n      return {\n        ...state,\n        fetching: false,\n        fetched: true,\n        tripReports: action.tripReports\n      }\n    }\n    case \"FETCH_TRIP_REPORTS_REJECTED\": {\n      return {\n        ...state,\n        fetching: false,\n        fetched: false,\n        error: action.error\n      }\n    }\n    case \"FETCH_USER_TRIP_REPORTS_PENDING\": {\n      return {\n        ...state,\n        fetchingTripReports: true\n      }\n    }\n    case \"FETCH_USER_TRIP_REPORTS_FULFILLED\": {\n      return {\n        ...state,\n        fetchingTripReports: false,\n        fetchedTripReports: true,\n        userTripReports: action.tripReports\n      }\n    }\n    case \"FETCH_USER_TRIP_REPORTS_REJECTED\": {\n      return {\n        ...state,\n        fetchingTripReports: false,\n        fetchedTripReports: false,\n        error: action.error\n      }\n    }\n    case \"POST_TRIP_REPORTS_PENDING\": {\n      return {\n        ...state,\n      }\n    }\n    case \"POST_TRIP_REPORTS_FULFILLED\": {\n      return {\n        ...state,\n        // The new trip report must be concatted into the first position of userTripReports and tripReports\n        userTripReports: [...state.userTripReports].reverse().concat(action.response).reverse(),\n        tripReports: [...state.tripReports].reverse().concat(action.response).reverse()\n      }\n    }\n    case \"POST_TRIP_REPORTS_REJECTED\": {\n      return {\n        ...state,\n        error: action.error\n        }\n    }\n    case \"DELETE_TRIP_REPORTS_PENDING\": {\n      return {\n        ...state,\n      }\n    }\n    case \"DELETE_TRIP_REPORTS_FULFILLED\": {\n      return {\n        ...state,\n        // Filters the deleted trip report out of userTripReports\n        userTripReports: state.userTripReports.filter(tripReport => tripReport.id !== action.response.id),\n        tripReports: state.tripReports.filter(tripReport => tripReport.id !== action.response.id)\n      }\n    }\n    case \"DELETE_TRIP_REPORTS_REJECTED\": {\n      return {\n        ...state,\n        error: action.error\n      }\n    }\n    case \"UPDATE_TRIP_REPORTS_PENDING\": {\n      return {\n        ...state,\n      }\n    }\n    case \"UPDATE_TRIP_REPORTS_FULFILLED\": {\n      return {\n        ...state,\n        userTripReports: [...state.tripReports].filter(tripReport => tripReport.id !== action.response.id).concat(action.response).sort(),\n        tripReports: [...state.tripReports],\n        response: action.response\n      }\n    }\n    case \"UPDATE_TRIP_REPORTS_REJECTED\": {\n      return {\n        ...state,\n        error: action.error\n      }\n    }\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}