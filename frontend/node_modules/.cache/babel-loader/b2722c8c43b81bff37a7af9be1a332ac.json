{"ast":null,"code":"import _toConsumableArray from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/peterzernia/projects/countries/src/components/Results.js\";\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nvar Results =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Results, _React$Component);\n\n  function Results() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Results);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Results)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      anchorEl: null\n    };\n\n    _this.handleClick = function (event) {\n      _this.setState({\n        anchorEl: event.currentTarget\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        anchorEl: null\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Results, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var anchorEl = this.state.anchorEl;\n      return React.createElement(Card, {\n        style: {\n          maxWidth: 400,\n          margin: '0 auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        action: React.createElement(IconButton, {\n          onClick: this.handleClick,\n          \"aria-owns\": anchorEl ? 'simple-menu' : undefined,\n          \"aria-haspopup\": \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, React.createElement(MoreVertIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        })),\n        title: this.props.country.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(Menu, {\n        id: \"simple-menu\",\n        anchorEl: anchorEl,\n        open: Boolean(anchorEl),\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, this.props.authenticated && !_toConsumableArray(this.props.userCountries).map(function (country) {\n        return country.name;\n      }).includes(this.props.country.name) && React.createElement(Tooltip, {\n        title: \"Add To My Map\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        onClick: function onClick(e) {\n          _this2.handleClose();\n\n          _this2.props.handleClick(e);\n        },\n        value: this.props.country.name,\n        id: this.props.country.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(AddCircleIcon, {\n        style: {\n          margin: '0 auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }))), this.props.authenticated && _toConsumableArray(this.props.userCountries).map(function (country) {\n        return country.name;\n      }).includes(this.props.country.name) && React.createElement(MenuItem, {\n        onClick: function onClick(e) {\n          _this2.handleClose();\n\n          _this2.props.handleClick(e);\n        },\n        value: this.props.country.name,\n        id: this.props.country.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(RemoveCircleIcon, {\n        style: {\n          margin: '0 auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })), React.createElement(MenuItem, {\n        onClick: function onClick() {\n          _this2.handleClose();\n\n          _this2.props.openCountryModal(_this2.props.country);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"More Info\")), React.createElement(CardMedia, {\n        component: \"img\",\n        src: this.props.country.flag,\n        alt: \"\",\n        width: \"400\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Results;\n}(React.Component);\n\nexport default Results;","map":{"version":3,"sources":["/Users/peterzernia/projects/countries/src/components/Results.js"],"names":["React","Card","CardHeader","CardMedia","IconButton","MoreVertIcon","AddCircleIcon","RemoveCircleIcon","Menu","MenuItem","Tooltip","Results","state","anchorEl","handleClick","event","setState","currentTarget","handleClose","maxWidth","margin","undefined","props","country","name","Boolean","authenticated","userCountries","map","includes","e","id","openCountryModal","flag","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,OAAP,MAAoB,2BAApB;;IAEMC,O;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE;AADJ,K;;UAIRC,W,GAAc,UAAAC,KAAK,EAAI;AACrB,YAAKC,QAAL,CAAc;AAAEH,QAAAA,QAAQ,EAAEE,KAAK,CAACE;AAAlB,OAAd;AACD,K;;UAEDC,W,GAAc,YAAM;AAClB,YAAKF,QAAL,CAAc;AAAEH,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD,K;;;;;;;6BAEO;AAAA;;AAAA,UAEEA,QAFF,GAEe,KAAKD,KAFpB,CAEEC,QAFF;AAIN,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACM,UAAAA,QAAQ,EAAE,GAAX;AAAgBC,UAAAA,MAAM,EAAE;AAAxB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,MAAM,EACd,oBAAC,UAAD;AACE,UAAA,OAAO,EAAE,KAAKN,WADhB;AAEE,uBAAWD,QAAQ,GAAG,aAAH,GAAmBQ,SAFxC;AAGE,2BAAc,MAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALF,CADJ;AASE,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAT5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAWE,oBAAC,IAAD;AACE,QAAA,EAAE,EAAC,aADL;AAEE,QAAA,QAAQ,EAAEX,QAFZ;AAGE,QAAA,IAAI,EAAEY,OAAO,CAACZ,QAAD,CAHf;AAIE,QAAA,OAAO,EAAE,KAAKK,WAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAaK,KAAKI,KAAL,CAAWI,aAAX,IAA4B,CAAC,mBAAI,KAAKJ,KAAL,CAAWK,aAAf,EAA8BC,GAA9B,CAAkC,UAAAL,OAAO;AAAA,eAAIA,OAAO,CAACC,IAAZ;AAAA,OAAzC,EAA2DK,QAA3D,CAAoE,KAAKP,KAAL,CAAWC,OAAX,CAAmBC,IAAvF,CAA9B,IAEA,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,OAAO,EAAE,iBAACM,CAAD,EAAO;AAAC,UAAA,MAAI,CAACZ,WAAL;;AAAoB,UAAA,MAAI,CAACI,KAAL,CAAWR,WAAX,CAAuBgB,CAAvB;AAA2B,SAA1E;AAA4E,QAAA,KAAK,EAAE,KAAKR,KAAL,CAAWC,OAAX,CAAmBC,IAAtG;AAA4G,QAAA,EAAE,EAAE,KAAKF,KAAL,CAAWC,OAAX,CAAmBQ,EAAnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAE;AAACX,UAAAA,MAAM,EAAE;AAAT,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CAfJ,EAuBK,KAAKE,KAAL,CAAWI,aAAX,IAA4B,mBAAI,KAAKJ,KAAL,CAAWK,aAAf,EAA8BC,GAA9B,CAAkC,UAAAL,OAAO;AAAA,eAAIA,OAAO,CAACC,IAAZ;AAAA,OAAzC,EAA2DK,QAA3D,CAAoE,KAAKP,KAAL,CAAWC,OAAX,CAAmBC,IAAvF,CAA7B,IACG,oBAAC,QAAD;AAAU,QAAA,OAAO,EAAE,iBAACM,CAAD,EAAO;AAAC,UAAA,MAAI,CAACZ,WAAL;;AAAoB,UAAA,MAAI,CAACI,KAAL,CAAWR,WAAX,CAAuBgB,CAAvB;AAA2B,SAA1E;AAA4E,QAAA,KAAK,EAAE,KAAKR,KAAL,CAAWC,OAAX,CAAmBC,IAAtG;AAA4G,QAAA,EAAE,EAAE,KAAKF,KAAL,CAAWC,OAAX,CAAmBQ,EAAnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuI,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAE;AAACX,UAAAA,MAAM,EAAE;AAAT,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvI,CAxBP,EA0BE,oBAAC,QAAD;AAAU,QAAA,OAAO,EAAE,mBAAM;AAAC,UAAA,MAAI,CAACF,WAAL;;AAAoB,UAAA,MAAI,CAACI,KAAL,CAAWU,gBAAX,CAA4B,MAAI,CAACV,KAAL,CAAWC,OAAvC;AAAiD,SAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBA1BF,CAXF,EAuCE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,KAArB;AAA2B,QAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC,OAAX,CAAmBU,IAAnD;AAAyD,QAAA,GAAG,EAAC,EAA7D;AAAgE,QAAA,KAAK,EAAC,KAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAvCF,CADF;AA0CE;;;;EA5DgBjC,KAAK,CAACkC,S;;AA+D5B,eAAevB,OAAf","sourcesContent":["import React from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport IconButton from '@material-ui/core/IconButton'\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nclass Results extends React.Component {\n\n  state = {\n    anchorEl: null,\n  };\n\n  handleClick = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  render(){\n\n    const { anchorEl } = this.state;\n\n    return(\n      <Card style={{maxWidth: 400, margin: '0 auto'}}>\n        <CardHeader action={\n            <IconButton\n              onClick={this.handleClick}\n              aria-owns={anchorEl ? 'simple-menu' : undefined}\n              aria-haspopup=\"true\"\n            >\n              <MoreVertIcon />\n            </IconButton>\n          }\n          title={this.props.country.name} />\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          open={Boolean(anchorEl)}\n          onClose={this.handleClose}\n        >\n          {/*\n            Maps userCountries into an array of just the country names, then\n            checks if the Result country name is in the array. If it is, it\n            displays the Remove Button, if it is not, it displays the Add\n            Button. If no user is authenticated, neither button will show.\n          */}\n          {\n            (this.props.authenticated && ![...this.props.userCountries].map(country => country.name).includes(this.props.country.name))\n            && (\n            <Tooltip title='Add To My Map'>\n              <MenuItem onClick={(e) => {this.handleClose(); this.props.handleClick(e);}} value={this.props.country.name} id={this.props.country.id}>\n                <AddCircleIcon style={{margin: '0 auto'}}/>\n              </MenuItem>\n            </Tooltip>\n            )\n          }\n          {\n            (this.props.authenticated && [...this.props.userCountries].map(country => country.name).includes(this.props.country.name))\n            && <MenuItem onClick={(e) => {this.handleClose(); this.props.handleClick(e);}} value={this.props.country.name} id={this.props.country.id}><RemoveCircleIcon style={{margin: '0 auto'}}/></MenuItem>\n          }\n          <MenuItem onClick={() => {this.handleClose(); this.props.openCountryModal(this.props.country);}}>More Info</MenuItem>\n        </Menu>\n        <CardMedia component='img' src={this.props.country.flag} alt=\"\" width=\"400\"/>\n      </Card>\n    )};\n}\n\nexport default Results;\n"]},"metadata":{},"sourceType":"module"}