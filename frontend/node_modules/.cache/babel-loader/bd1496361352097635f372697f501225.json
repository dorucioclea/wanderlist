{"ast":null,"code":"var _jsxFileName = \"/Users/peterzernia/projects/countries/src/components/CopyLinkModal.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport TextField from '@material-ui/core/TextField';\n\nvar CopyLinkModal = function CopyLinkModal(props) {\n  return React.createElement(Dialog, {\n    onClose: props.closeCopyLinkModal,\n    open: props.showCopyLinkModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: \"user-auth\",\n    type: \"text\",\n    name: \"link\",\n    defaultValue: \"localhost:3000/p/\".concat(props.modalLink, \"/\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"submit\",\n    onSubmit: function onSubmit(e) {\n      props.closeCopyLinkModal();\n      props.copyLink(e);\n    },\n    color: \"primary\",\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Copy\"), React.createElement(Button, {\n    onClick: function onClick() {\n      return props.closeCopyLinkModal();\n    },\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Cancel\"))));\n};\n\nexport default CopyLinkModal;","map":{"version":3,"sources":["/Users/peterzernia/projects/countries/src/components/CopyLinkModal.js"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","TextField","CopyLinkModal","props","closeCopyLinkModal","showCopyLinkModal","modalLink","e","copyLink"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD;AAAA,SACpB,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEA,KAAK,CAACC,kBAAvB;AAA2C,IAAA,IAAI,EAAED,KAAK,CAACE,iBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,WAArB;AAAiC,IAAA,IAAI,EAAC,MAAtC;AAA6C,IAAA,IAAI,EAAC,MAAlD;AAAyD,IAAA,YAAY,6BAAsBF,KAAK,CAACG,SAA5B,MAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAE,kBAACC,CAAD,EAAO;AAACJ,MAAAA,KAAK,CAACC,kBAAN;AAA4BD,MAAAA,KAAK,CAACK,QAAN,CAAeD,CAAf;AAAoB,KAAxF;AAA0F,IAAA,KAAK,EAAC,SAAhG;AAA0G,IAAA,OAAO,EAAC,WAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAIA,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMJ,KAAK,CAACC,kBAAN,EAAN;AAAA,KAAjB;AAAmD,IAAA,KAAK,EAAC,WAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA,CAFF,CADF,CADoB;AAAA,CAAtB;;AAgBA,eAAeF,aAAf","sourcesContent":["import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport TextField from '@material-ui/core/TextField'\n\nconst CopyLinkModal = (props) => (\n  <Dialog onClose={props.closeCopyLinkModal} open={props.showCopyLinkModal}>\n    <DialogContent>\n      <TextField className=\"user-auth\" type='text' name=\"link\" defaultValue={`localhost:3000/p/${props.modalLink}/`}/>\n      <DialogActions>\n      <Button type='submit' onSubmit={(e) => {props.closeCopyLinkModal(); props.copyLink(e); }} color=\"primary\" variant=\"contained\">\n        Copy\n      </Button>\n      <Button onClick={() => props.closeCopyLinkModal()} color=\"secondary\">\n        Cancel\n      </Button>\n    </DialogActions>\n    </DialogContent>\n  </Dialog>\n);\n\nexport default CopyLinkModal\n"]},"metadata":{},"sourceType":"module"}