{"ast":null,"code":"import _classCallCheck from \"/Users/peterzernia/projects/countries/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/peterzernia/projects/countries/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/peterzernia/projects/countries/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/peterzernia/projects/countries/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/peterzernia/projects/countries/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/peterzernia/projects/countries/frontend/src/containers/Search.js\";\nimport React, { Component } from 'react';\nimport Results from '../components/Results';\nimport SearchBar from '../components/SearchBar';\nimport { connect } from 'react-redux';\nimport { fetchCountry as _fetchCountry } from '../actions/countryActions';\nimport { addCountry as _addCountry } from '../actions/userActions';\nimport { DotLoader } from 'react-spinners';\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Search)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.fetchCountry(e.target.country.value);\n    };\n\n    _this.handleClick = function (e) {\n      e.preventDefault();\n\n      _this.props.addCountry(_this.props.username, ['Albania', 'Algeria']);\n    };\n\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(SearchBar, {\n        handleSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), this.props.fetching ? React.createElement(DotLoader, {\n        size: 50,\n        color: '#007bff',\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }) : null, this.props.fetched ? React.createElement(Results, Object.assign({\n        handleClick: this.handleClick\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      })) : null));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nvar mapState = function mapState(state) {\n  return {\n    username: state.user.user.username,\n    country: state.country.country,\n    fetched: state.country.fetched,\n    fetching: state.country.fetching\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch, ownProps) {\n  return {\n    fetchCountry: function fetchCountry(query) {\n      return dispatch(_fetchCountry(query));\n    },\n    addCountry: function addCountry(countries) {\n      return dispatch(_addCountry(countries));\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(Search);\n;","map":{"version":3,"sources":["/Users/peterzernia/projects/countries/frontend/src/containers/Search.js"],"names":["React","Component","Results","SearchBar","connect","fetchCountry","addCountry","DotLoader","Search","handleSubmit","e","preventDefault","props","target","country","value","handleClick","username","fetching","fetched","mapState","state","user","mapDispatch","dispatch","ownProps","query","countries"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAY,IAAZA,aAAT,QAA6B,2BAA7B;AACA,SAASC,UAAU,IAAVA,WAAT,QAA2B,wBAA3B;AACA,SAASC,SAAT,QAA0B,gBAA1B;;IAEMC,M;;;;;;;;;;;;;;;;;;UAEJC,Y,GAAe,UAACC,CAAD,EAAO;AACpBA,MAAAA,CAAC,CAACC,cAAF;;AACA,YAAKC,KAAL,CAAWP,YAAX,CAAwBK,CAAC,CAACG,MAAF,CAASC,OAAT,CAAiBC,KAAzC;AACD,K;;UAEDC,W,GAAc,UAACN,CAAD,EAAO;AACnBA,MAAAA,CAAC,CAACC,cAAF;;AACA,YAAKC,KAAL,CAAWN,UAAX,CAAsB,MAAKM,KAAL,CAAWK,QAAjC,EAA2C,CAAC,SAAD,EAAY,SAAZ,CAA3C;AACD,K;;;;;;;6BAEQ;AACL,aACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,YAAY,EAAE,KAAKR,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,OACiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADjD,EAEG,KAAKG,KAAL,CAAWM,QAAX,GAAsB,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAE,EAAjB;AAAqB,QAAA,KAAK,EAAE,SAA5B;AAAuC,QAAA,SAAS,EAAC,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAtB,GAAsF,IAFzF,EAGG,KAAKN,KAAL,CAAWO,OAAX,GAAqB,oBAAC,OAAD;AAAS,QAAA,WAAW,EAAE,KAAKH;AAA3B,SAA4C,KAAKJ,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAArB,GAAkF,IAHrF,CADF,CADF;AASH;;;;EAtBkBX,S;;AAyBrB,IAAMmB,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AACxB,SAAO;AACLJ,IAAAA,QAAQ,EAAEI,KAAK,CAACC,IAAN,CAAWA,IAAX,CAAgBL,QADrB;AAELH,IAAAA,OAAO,EAAEO,KAAK,CAACP,OAAN,CAAcA,OAFlB;AAGLK,IAAAA,OAAO,EAAEE,KAAK,CAACP,OAAN,CAAcK,OAHlB;AAILD,IAAAA,QAAQ,EAAEG,KAAK,CAACP,OAAN,CAAcI;AAJnB,GAAP;AAMD,CAPD;;AASA,IAAMK,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAWC,QAAX,EAAwB;AAC1C,SAAO;AACLpB,IAAAA,YAAY,EAAE,sBAACqB,KAAD;AAAA,aAAWF,QAAQ,CAACnB,aAAY,CAACqB,KAAD,CAAb,CAAnB;AAAA,KADT;AAELpB,IAAAA,UAAU,EAAE,oBAACqB,SAAD;AAAA,aAAeH,QAAQ,CAAClB,WAAU,CAACqB,SAAD,CAAX,CAAvB;AAAA;AAFP,GAAP;AAID,CALD;;AAOA,eAAevB,OAAO,CAACgB,QAAD,EAAWG,WAAX,CAAP,CAA+Bf,MAA/B,CAAf;AAAsD","sourcesContent":["import React, { Component } from 'react'\nimport Results from '../components/Results'\nimport SearchBar from '../components/SearchBar'\nimport { connect } from 'react-redux'\nimport { fetchCountry } from '../actions/countryActions'\nimport { addCountry } from '../actions/userActions'\nimport { DotLoader } from 'react-spinners';\n\nclass Search extends Component {\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.fetchCountry(e.target.country.value);\n  }\n\n  handleClick = (e) => {\n    e.preventDefault();\n    this.props.addCountry(this.props.username, ['Albania', 'Algeria']);\n  }\n\n  render() {\n      return (\n        <div className=\"search\">\n          <div className=\"\">\n            <SearchBar handleSubmit={this.handleSubmit} /> <br/>\n            {this.props.fetching ? <DotLoader size={50} color={'#007bff'} className=\"content\" /> : null}\n            {this.props.fetched ? <Results handleClick={this.handleClick} {...this.props} /> : null}\n          </div>\n        </div>\n      );\n  }\n}\n\nconst mapState = state => {\n  return {\n    username: state.user.user.username,\n    country: state.country.country,\n    fetched: state.country.fetched,\n    fetching: state.country.fetching\n  };\n};\n\nconst mapDispatch = (dispatch, ownProps) => {\n  return {\n    fetchCountry: (query) => dispatch(fetchCountry(query)),\n    addCountry: (countries) => dispatch(addCountry(countries))\n  };\n};\n\nexport default connect(mapState, mapDispatch)(Search);;\n"]},"metadata":{},"sourceType":"module"}