{"ast":null,"code":"import _classCallCheck from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/peterzernia/projects/countries/src/containers/Profile.js\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport GoogleMap from '../components/GoogleMap';\nimport ProfileModal from '../components/ProfileModal';\nimport { openProfileModal, closeProfileModal } from '../actions/modalActions';\nimport { putUserData } from '../actions/userActions';\nimport { fetchCountry } from '../actions/countryActions';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport CountryModal from '../components/CountryModal';\nimport { openCountryModal, closeCountryModal } from '../actions/modalActions';\n\nvar Profile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Profile, _Component);\n\n  function Profile() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Profile)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      var userCountryList = _this.props.userCountries.map(function (country) {\n        return country.id;\n      });\n\n      _this.props.putUserData(e.target.username.value, e.target.email.value, userCountryList, Number(e.target.country.value), e.target.biography.value);\n\n      _this.props.closeProfileModal();\n    };\n\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      cancel();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(CountryModal, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      })), React.createElement(ProfileModal, Object.assign({\n        handleSubmit: this.handleSubmit\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"wrap\",\n        style: {\n          marginBottom: 60\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"left\",\n        style: {\n          width: '37%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, this.props.user.home && React.createElement(Avatar, {\n        style: {\n          width: 150,\n          height: 150,\n          margin: '0 auto'\n        },\n        src: this.props.user.home.flag,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"right\",\n        style: {\n          textAlign: 'left',\n          width: '63%',\n          padding: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          height: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, this.props.user.username)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          height: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"small\",\n        variant: \"outlined\",\n        onClick: function onClick() {\n          return _this2.props.openProfileModal(_this2.props.user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Edit Profile\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          height: 30,\n          maxWidth: '75%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, this.props.biography))), React.createElement(\"hr\", {\n        style: {\n          width: '85%',\n          size: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(GoogleMap, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nvar mapState = function mapState(state) {\n  return {\n    user: state.user.user,\n    biography: state.user.user.biography,\n    searchedCountry: state.country.country,\n    showProfileModal: state.modal.showProfileModal,\n    modalProfile: state.modal.modalProfile,\n    userCountries: state.user.user.countries,\n    showCountryModal: state.modal.showCountryModal,\n    modalCountry: state.modal.modalCountry\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return bindActionCreators({\n    fetchCountry: fetchCountry,\n    putUserData: putUserData,\n    openProfileModal: openProfileModal,\n    closeProfileModal: closeProfileModal,\n    openCountryModal: openCountryModal,\n    closeCountryModal: closeCountryModal\n  }, dispatch);\n};\n\nexport default connect(mapState, mapDispatch)(Profile);\nProfile.propTypes = {\n  user: PropTypes.object,\n  biography: PropTypes.string,\n  searchedCountry: PropTypes.array,\n  showProfileModal: PropTypes.bool,\n  modalProfile: PropTypes.object,\n  userCountries: PropTypes.array,\n  showCountryModal: PropTypes.bool,\n  modalCountry: PropTypes.object,\n  fetchCountry: PropTypes.func,\n  putUserData: PropTypes.func,\n  openProfileModal: PropTypes.func,\n  closeProfileModal: PropTypes.func,\n  openCountryModal: PropTypes.func,\n  closeCountryModal: PropTypes.func\n};","map":{"version":3,"sources":["/Users/peterzernia/projects/countries/src/containers/Profile.js"],"names":["React","Component","bindActionCreators","PropTypes","connect","GoogleMap","ProfileModal","openProfileModal","closeProfileModal","putUserData","fetchCountry","Button","Avatar","Typography","CountryModal","openCountryModal","closeCountryModal","Profile","handleSubmit","e","preventDefault","userCountryList","props","userCountries","map","country","id","target","username","value","email","Number","biography","cancel","marginBottom","width","user","home","height","margin","flag","textAlign","padding","maxWidth","size","mapState","state","searchedCountry","showProfileModal","modal","modalProfile","countries","showCountryModal","modalCountry","mapDispatch","dispatch","propTypes","object","string","array","bool","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { bindActionCreators } from 'redux'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport GoogleMap from '../components/GoogleMap'\nimport ProfileModal from '../components/ProfileModal'\nimport { openProfileModal, closeProfileModal } from '../actions/modalActions'\nimport { putUserData } from '../actions/userActions'\nimport { fetchCountry } from '../actions/countryActions'\nimport Button from '@material-ui/core/Button'\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\nimport CountryModal from '../components/CountryModal'\nimport { openCountryModal, closeCountryModal } from '../actions/modalActions'\n\nclass Profile extends Component {\n\n  componentWillUnmount() {\n    cancel();\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    let userCountryList = this.props.userCountries.map(country => country.id);\n    this.props.putUserData(\n      e.target.username.value,\n      e.target.email.value,\n      userCountryList,\n      Number(e.target.country.value),\n      e.target.biography.value\n    );\n    this.props.closeProfileModal();\n  }\n\n  render(){\n    return(\n      <div className='content'>\n        <CountryModal {...this.props} />\n        <ProfileModal handleSubmit={this.handleSubmit} {...this.props} />\n        <div className='wrap' style={{ marginBottom: 60 }} >\n          <div className='left' style={{ width: '37%' }}>\n            {this.props.user.home && <Avatar style={{ width: 150, height: 150, margin: '0 auto' }} src={this.props.user.home.flag}/>}\n          </div>\n          <div className='right' style={{textAlign: 'left', width: '63%', padding: 10 }}>\n            <div style={{ height: 30 }}>\n            <Typography variant=\"h4\" gutterBottom>\n              {this.props.user.username}\n            </Typography>\n            </div><br/>\n            <div style={{ height: 30 }}>\n              <Button size='small' variant='outlined' onClick={() => this.props.openProfileModal(this.props.user)}>\n                Edit Profile\n              </Button>\n            </div><br/>\n            <div style={{ height: 30, maxWidth: '75%' }}>\n              {this.props.biography}\n            </div>\n          </div>\n        </div>\n        <hr style={{width: '85%', size: 1}}/>\n        <GoogleMap {...this.props}/>\n      </div>\n    );\n  }\n}\n\nconst mapState = state => {\n  return {\n    user: state.user.user,\n    biography: state.user.user.biography,\n    searchedCountry: state.country.country,\n    showProfileModal: state.modal.showProfileModal,\n    modalProfile: state.modal.modalProfile,\n    userCountries: state.user.user.countries,\n    showCountryModal: state.modal.showCountryModal,\n    modalCountry: state.modal.modalCountry,\n  };\n}\n\nconst mapDispatch = dispatch => {\n  return bindActionCreators({\n    fetchCountry,\n    putUserData,\n    openProfileModal,\n    closeProfileModal,\n    openCountryModal,\n    closeCountryModal\n  }, dispatch);\n}\n\nexport default connect(mapState, mapDispatch)(Profile);\n\nProfile.propTypes = {\n  user: PropTypes.object,\n  biography: PropTypes.string,\n  searchedCountry: PropTypes.array,\n  showProfileModal: PropTypes.bool,\n  modalProfile: PropTypes.object,\n  userCountries: PropTypes.array,\n  showCountryModal: PropTypes.bool,\n  modalCountry: PropTypes.object,\n  fetchCountry: PropTypes.func,\n  putUserData: PropTypes.func,\n  openProfileModal: PropTypes.func,\n  closeProfileModal: PropTypes.func,\n  openCountryModal: PropTypes.func,\n  closeCountryModal: PropTypes.func\n};\n"]},"metadata":{},"sourceType":"module"}