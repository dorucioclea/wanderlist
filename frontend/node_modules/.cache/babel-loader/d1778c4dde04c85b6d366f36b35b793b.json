{"ast":null,"code":"import _classCallCheck from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/peterzernia/projects/countries/src/containers/Search.js\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport CountryModal from '../components/CountryModal';\nimport Results from '../components/Results';\nimport SearchBar from '../components/SearchBar';\nimport { connect } from 'react-redux';\nimport { fetchCountry } from '../actions/countryActions';\nimport { putUserData } from '../actions/userActions';\nimport { openCountryModal, closeCountryModal } from '../actions/modalActions';\nimport { DotLoader } from 'react-spinners';\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Search)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.fetchCountry(e.target.country.value);\n    };\n\n    _this.handleClick = function (e) {\n      e.preventDefault();\n      var newCountryList = _this.props.userCountries;\n\n      var newCountry = _this.props.searchedCountry.filter(function (country) {\n        return country.id === Number(e.target.name);\n      })[0];\n\n      console.log(newCountry);\n\n      if (_this.props.userCountries.findIndex(function (i) {\n        return i.name === newCountry.name;\n      }) === -1) {\n        newCountryList = _this.props.userCountries.concat([newCountry]);\n        newCountryList = newCountryList.map(function (country) {\n          return country.id;\n        }); // Convert array of objects into array of object.id\n      } else {\n        var index = newCountryList.findIndex(function (i) {\n          return i.name === newCountry.name;\n        });\n\n        if (index !== -1) {\n          newCountryList.splice(index, 1);\n          newCountryList = newCountryList.map(function (country) {\n            return country.id;\n          }); // Convert array of objects into array of object.id\n        }\n      }\n\n      _this.props.putUserData(_this.props.username, _this.props.email, newCountryList, _this.props.home.id);\n    };\n\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var listCountries = this.props.searchedCountry.map(function (country) {\n        return React.createElement(Results, Object.assign({\n          key: country.id\n        }, _this2.props, country, {\n          handleClick: _this2.handleClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(SearchBar, {\n        handleSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), this.props.fetching && React.createElement(DotLoader, {\n        size: 50,\n        color: '#66bb6a',\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), this.props.fetched && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, listCountries), React.createElement(CountryModal, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nvar mapState = function mapState(state) {\n  return {\n    username: state.user.user.username,\n    email: state.user.user.email,\n    home: state.user.user.home,\n    userCountries: state.user.user.countries,\n    authenticated: state.auth.authenticated,\n    searchedCountry: state.country.country,\n    fetched: state.country.fetched,\n    fetching: state.country.fetching,\n    showCountryModal: state.modal.showCountryModal,\n    modalCountry: state.modal.modalCountry\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return bindActionCreators({\n    fetchCountry: fetchCountry,\n    putUserData: putUserData,\n    openCountryModal: openCountryModal,\n    closeCountryModal: closeCountryModal\n  }, dispatch);\n};\n\nexport default connect(mapState, mapDispatch)(Search);\nSearch.propTypes = {\n  username: PropTypes.string,\n  email: PropTypes.string,\n  home: PropTypes.object,\n  userCountries: PropTypes.array,\n  authenticated: PropTypes.bool,\n  searchedCountry: PropTypes.array,\n  fetched: PropTypes.bool,\n  fetching: PropTypes.bool,\n  showCountryModal: PropTypes.bool,\n  modalCountry: PropTypes.object,\n  fetchCountry: PropTypes.func,\n  putUserData: PropTypes.func,\n  openCountryModal: PropTypes.func,\n  closeCountryModal: PropTypes.func\n};","map":{"version":3,"sources":["/Users/peterzernia/projects/countries/src/containers/Search.js"],"names":["React","Component","bindActionCreators","PropTypes","CountryModal","Results","SearchBar","connect","fetchCountry","putUserData","openCountryModal","closeCountryModal","DotLoader","Search","handleSubmit","e","preventDefault","props","target","country","value","handleClick","newCountryList","userCountries","newCountry","searchedCountry","filter","id","Number","name","console","log","findIndex","i","concat","map","index","splice","username","email","home","listCountries","fetching","fetched","mapState","state","user","countries","authenticated","auth","showCountryModal","modal","modalCountry","mapDispatch","dispatch","propTypes","string","object","array","bool","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { bindActionCreators } from 'redux'\nimport PropTypes from 'prop-types'\nimport CountryModal from '../components/CountryModal'\nimport Results from '../components/Results'\nimport SearchBar from '../components/SearchBar'\nimport { connect } from 'react-redux'\nimport { fetchCountry } from '../actions/countryActions'\nimport { putUserData } from '../actions/userActions'\nimport { openCountryModal, closeCountryModal } from '../actions/modalActions'\nimport { DotLoader } from 'react-spinners'\n\nclass Search extends Component {\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.fetchCountry(e.target.country.value);\n  }\n\n  /*\n  This function checks to see if the country is already in the user list,\n  adds it if it is not, and removes it if it is, then PUT requests the new list\n  to the Django API. The button in the Results component is given the\n  name = index of the array. Then e.target.name == the index of the clicked\n  country in the array of searchedCountry when clicked. From the array index,\n  the newCountry object is the searchedCountry[e.target.name].\n  */\n  handleClick = (e) => {\n    e.preventDefault();\n    let newCountryList = this.props.userCountries\n    let newCountry = this.props.searchedCountry.filter(country => country.id === Number(e.target.name))[0]\n    console.log(newCountry)\n    if (this.props.userCountries.findIndex(i => i.name === newCountry.name) === -1) {\n      newCountryList = this.props.userCountries.concat([newCountry]);\n      newCountryList = newCountryList.map(country => country.id);  // Convert array of objects into array of object.id\n    } else {\n      let index = newCountryList.findIndex(i => i.name === newCountry.name);\n      if (index !== -1){\n        newCountryList.splice(index, 1);\n        newCountryList = newCountryList.map(country => country.id); // Convert array of objects into array of object.id\n      }\n    }\n    this.props.putUserData(\n      this.props.username,\n      this.props.email,\n      newCountryList,\n      this.props.home.id\n    );\n  }\n\n  render() {\n\n    const listCountries = this.props.searchedCountry.map(country =>(\n      <Results key={country.id} {...this.props} {...country} handleClick={this.handleClick}/>\n    ));\n\n      return (\n        <div className=\"content\">\n          <SearchBar handleSubmit={this.handleSubmit} /> <br/>\n          {this.props.fetching && <DotLoader size={50} color={'#66bb6a'} className=\"content\" />}\n          {this.props.fetched && <div>{listCountries}</div>}\n          <CountryModal {...this.props} />\n        </div>\n      );\n  }\n}\n\nconst mapState = state => {\n  return {\n    username: state.user.user.username,\n    email: state.user.user.email,\n    home: state.user.user.home,\n    userCountries: state.user.user.countries,\n    authenticated: state.auth.authenticated,\n    searchedCountry: state.country.country,\n    fetched: state.country.fetched,\n    fetching: state.country.fetching,\n    showCountryModal: state.modal.showCountryModal,\n    modalCountry: state.modal.modalCountry\n  };\n};\n\nconst mapDispatch = dispatch => {\n  return bindActionCreators({\n    fetchCountry,\n    putUserData,\n    openCountryModal,\n    closeCountryModal\n  }, dispatch);\n};\n\nexport default connect(mapState, mapDispatch)(Search);\n\nSearch.propTypes = {\n  username: PropTypes.string,\n  email: PropTypes.string,\n  home: PropTypes.object,\n  userCountries: PropTypes.array,\n  authenticated: PropTypes.bool,\n  searchedCountry: PropTypes.array,\n  fetched: PropTypes.bool,\n  fetching: PropTypes.bool,\n  showCountryModal: PropTypes.bool,\n  modalCountry: PropTypes.object,\n  fetchCountry: PropTypes.func,\n  putUserData: PropTypes.func,\n  openCountryModal: PropTypes.func,\n  closeCountryModal: PropTypes.func\n};\n"]},"metadata":{},"sourceType":"module"}