{"ast":null,"code":"var _jsxFileName = \"/Users/peterzernia/projects/countries/src/components/CountryModal.js\";\nimport React from 'react';\nimport ReactModal from 'react-modal';\nReactModal.setAppElement('body');\n\nvar CountryModal = function CountryModal(props) {\n  var altSpellings;\n\n  if (props.modalCountry) {\n    altSpellings = props.modalCountry.alt_spellings.join(\", \");\n  }\n\n  return React.createElement(ReactModal, {\n    isOpen: props.showCountryModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"close-modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: props.closeCountryModal,\n    className: \"close\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    \"aria-hidden\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"\\xD7\"))), React.createElement(\"div\", {\n    className: \"wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, props.modalCountry.name), React.createElement(\"img\", {\n    className: \"flag\",\n    src: props.modalCountry.flag,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Geographic & Political Info\"), React.createElement(\"div\", {\n    className: \"modal-detail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Native Name - \", props.modalCountry.native_name, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), \"Alternate Spellings - \", altSpellings, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), \"Capital - \", props.modalCountry.capital, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), \"Demonym - \", props.modalCountry.demonym, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), \"Languages - \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), \"Region - \", props.modalCountry.region, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), \"SubRegion - \", props.modalCountry.subregion, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), \"Borders - \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), \"Regional Trade Blocs - \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), \"Population - \", props.modalCountry.population, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), \"Area - \", props.modalCountry.area, \"km\\xB2\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), \"Latitude & Longitude - \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), \"Timezone(s) - \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), \"Top Level Domain(s) - \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), \"ISO ALPHA-2 - \", props.modalCountry.alpha2code, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), \"ISO ALPHA-3 - \", props.modalCountry.alpha3code, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), \"Gini Coefficient - \", props.modalCountry.gini, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), \"Numeric Code - \", props.modalCountry.numeric_code, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), \"Calling Code - \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), \"CIOC - \", props.modalCountry.cioc, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }));\n};\n\nexport default CountryModal;","map":{"version":3,"sources":["/Users/peterzernia/projects/countries/src/components/CountryModal.js"],"names":["React","ReactModal","setAppElement","CountryModal","props","altSpellings","modalCountry","alt_spellings","join","showCountryModal","closeCountryModal","name","flag","native_name","capital","demonym","region","subregion","population","area","alpha2code","alpha3code","gini","numeric_code","cioc"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactModal from 'react-modal'\n\nReactModal.setAppElement('body');\n\nconst CountryModal = (props) => {\n\n  var altSpellings;\n\n  if (props.modalCountry) {\n    altSpellings = (props.modalCountry.alt_spellings).join(\", \")\n  }\n\n  return (\n    <ReactModal isOpen={props.showCountryModal}>\n      <div className=\"close-modal\">\n        <button onClick={props.closeCountryModal} className=\"close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div className='wrap'>\n        <div className=\"left\">\n          <h3>{props.modalCountry.name}</h3>\n          <img className=\"flag\" src={props.modalCountry.flag} alt=\"\"/><br/>\n        </div>\n        <div className=\"right\">\n          <h3>Geographic & Political Info</h3>\n          <div className=\"modal-detail\">\n            Native Name - {props.modalCountry.native_name}<br/>\n            Alternate Spellings - {altSpellings}<br/>\n            Capital - {props.modalCountry.capital}<br/>\n            Demonym - {props.modalCountry.demonym}<br/>\n            Languages - <br/>\n            Region - {props.modalCountry.region}<br/>\n            SubRegion - {props.modalCountry.subregion}<br/>\n            Borders - <br/>\n            Regional Trade Blocs - <br/>\n            Population - {props.modalCountry.population}<br/>\n            Area - {props.modalCountry.area}km²<br/>\n            Latitude & Longitude - <br/>\n            Timezone(s) - <br/>\n            Top Level Domain(s) - <br/>\n            ISO ALPHA-2 - {props.modalCountry.alpha2code}<br/>\n            ISO ALPHA-3 - {props.modalCountry.alpha3code}<br/>\n            Gini Coefficient - {props.modalCountry.gini}<br/>\n            Numeric Code - {props.modalCountry.numeric_code}<br/>\n            Calling Code - <br/>\n            CIOC - {props.modalCountry.cioc}<br/>\n          </div>\n        </div>\n      </div><br/>\n    </ReactModal>\n  )\n};\n\nexport default CountryModal;\n"]},"metadata":{},"sourceType":"module"}