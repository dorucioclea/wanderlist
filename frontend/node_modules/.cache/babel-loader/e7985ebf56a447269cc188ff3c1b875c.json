{"ast":null,"code":"import _classCallCheck from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/peterzernia/projects/countries/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/peterzernia/projects/countries/src/containers/Post.js\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport { openCopyLinkModal, closeCopyLinkModal } from '../actions/modalActions';\nimport { fetchSlugTripReports } from '../actions/tripReportActions';\nimport { openCountryModal, closeCountryModal } from '../actions/modalActions';\nimport { openNotAuthModal, closeNotAuthModal } from '../actions/modalActions';\nimport { removeError } from '../actions/errorActions';\nimport { toggleFavorite } from '../actions/favoriteActions';\nimport CountryModal from '../components/CountryModal';\nimport CopyLinkModal from '../components/CopyLinkModal';\nimport NotAuthModal from '../components/NotAuthModal';\nimport TripReport from '../components/TripReport';\nimport { DotLoader } from 'react-spinners';\n/*\nThis component creates a link off the posts slug, so that users can share and\naccess posts externally.\n*/\n\nvar Post =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Post, _Component);\n\n  function Post() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Post);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Post)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleClick = function (e) {\n      e.preventDefault();\n\n      _this.props.toggleFavorite(e.currentTarget.id);\n    };\n\n    return _this;\n  }\n\n  _createClass(Post, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var slug = this.props.match.params.slug;\n      this.props.fetchSlugTripReports(slug);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.removeError();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var listTripReport = null;\n\n      if (this.props.tripReports) {\n        listTripReport = this.props.tripReports.map(function (tripReport) {\n          return React.createElement(\"div\", {\n            key: tripReport.id,\n            style: {\n              marginBottom: 20\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          }, React.createElement(TripReport, Object.assign({\n            handleClick: _this2.handleClick\n          }, tripReport, _this2.props, {\n            openCountryModal: _this2.props.openCountryModal,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          })));\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(NotAuthModal, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })), React.createElement(CopyLinkModal, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })), this.props.fetching && React.createElement(\"div\", {\n        className: \"centered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(DotLoader, {\n        size: 50,\n        color: '#2196f3',\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })), this.props.fetched && React.createElement(CountryModal, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })), this.props.fetched && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, listTripReport));\n    }\n  }]);\n\n  return Post;\n}(Component);\n\nvar mapState = function mapState(state) {\n  return {\n    pk: state.user.user.pk,\n    authenticated: state.auth.authenticated,\n    tripReports: state.tripReport.slugTripReports.results,\n    fetched: state.tripReport.fetchedSlugTripReports,\n    fetching: state.tripReport.fetchingSlugTripReports,\n    showCountryModal: state.modal.showCountryModal,\n    modalCountry: state.modal.modalCountry,\n    showNotAuthModal: state.modal.showNotAuthModal,\n    showCopyLinkModal: state.modal.showCopyLinkModal,\n    modalLink: state.modal.modalLink\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return bindActionCreators({\n    fetchSlugTripReports: fetchSlugTripReports,\n    removeError: removeError,\n    openCountryModal: openCountryModal,\n    closeCountryModal: closeCountryModal,\n    toggleFavorite: toggleFavorite,\n    openNotAuthModal: openNotAuthModal,\n    closeNotAuthModal: closeNotAuthModal,\n    openCopyLinkModal: openCopyLinkModal,\n    closeCopyLinkModal: closeCopyLinkModal\n  }, dispatch);\n};\n\nexport default connect(mapState, mapDispatch)(Post);\nPost.propTypes = {\n  pk: PropTypes.number,\n  authenticated: PropTypes.bool,\n  tripReport: PropTypes.array,\n  fetched: PropTypes.bool,\n  showCountryModal: PropTypes.bool,\n  modalCountry: PropTypes.object,\n  showNotAuthModal: PropTypes.bool,\n  showCopyLinkModal: PropTypes.bool,\n  modalLink: PropTypes.string,\n  fetchSlugTripReports: PropTypes.func,\n  removeError: PropTypes.func,\n  openCountryModal: PropTypes.func,\n  closeCountryModal: PropTypes.func,\n  toggleFavorite: PropTypes.func,\n  openNotAuthModal: PropTypes.func,\n  closeNotAuthModal: PropTypes.func,\n  openCopyLinkModal: PropTypes.func,\n  closeCopyLinkModal: PropTypes.func\n};","map":{"version":3,"sources":["/Users/peterzernia/projects/countries/src/containers/Post.js"],"names":["React","Component","bindActionCreators","connect","PropTypes","openCopyLinkModal","closeCopyLinkModal","fetchSlugTripReports","openCountryModal","closeCountryModal","openNotAuthModal","closeNotAuthModal","removeError","toggleFavorite","CountryModal","CopyLinkModal","NotAuthModal","TripReport","DotLoader","Post","handleClick","e","preventDefault","props","currentTarget","id","slug","match","params","listTripReport","tripReports","map","tripReport","marginBottom","fetching","fetched","mapState","state","pk","user","authenticated","auth","slugTripReports","results","fetchedSlugTripReports","fetchingSlugTripReports","showCountryModal","modal","modalCountry","showNotAuthModal","showCopyLinkModal","modalLink","mapDispatch","dispatch","propTypes","number","bool","array","object","string","func"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,SAASC,iBAAT,EAA4BC,kBAA5B,QAAsD,yBAAtD;AACA,SAASC,oBAAT,QAAqC,8BAArC;AACA,SAASC,gBAAT,EAA2BC,iBAA3B,QAAoD,yBAApD;AACA,SAASC,gBAAT,EAA2BC,iBAA3B,QAAoD,yBAApD;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,cAAT,QAA+B,4BAA/B;AAEA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,SAASC,SAAT,QAA0B,gBAA1B;AAEA;;;;;IAIMC,I;;;;;;;;;;;;;;;;;;UAWJC,W,GAAc,UAACC,CAAD,EAAO;AACnBA,MAAAA,CAAC,CAACC,cAAF;;AACA,YAAKC,KAAL,CAAWV,cAAX,CAA0BQ,CAAC,CAACG,aAAF,CAAgBC,EAA1C;AACD,K;;;;;;;wCAZoB;AAAA,UACXC,IADW,GACF,KAAKH,KAAL,CAAWI,KAAX,CAAiBC,MADf,CACXF,IADW;AAEnB,WAAKH,KAAL,CAAWhB,oBAAX,CAAgCmB,IAAhC;AACD;;;2CAEsB;AACrB,WAAKH,KAAL,CAAWX,WAAX;AACD;;;6BAOO;AAAA;;AAEN,UAAIiB,cAAc,GAAG,IAArB;;AACA,UAAI,KAAKN,KAAL,CAAWO,WAAf,EAA2B;AACzBD,QAAAA,cAAc,GAAG,KAAKN,KAAL,CAAWO,WAAX,CAAuBC,GAAvB,CAA2B,UAAAC,UAAU;AAAA,iBACpD;AAAK,YAAA,GAAG,EAAEA,UAAU,CAACP,EAArB;AAAyB,YAAA,KAAK,EAAE;AAAEQ,cAAAA,YAAY,EAAE;AAAhB,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,UAAD;AAAY,YAAA,WAAW,EAAE,MAAI,CAACb;AAA9B,aAA+CY,UAA/C,EAA+D,MAAI,CAACT,KAApE;AAA2E,YAAA,gBAAgB,EAAE,MAAI,CAACA,KAAL,CAAWf,gBAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CADoD;AAAA,SAArC,CAAjB;AAKD;;AAED,aACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD,oBAAkB,KAAKe,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAEE,oBAAC,aAAD,oBAAmB,KAAKA,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,EAGG,KAAKA,KAAL,CAAWW,QAAX,IAAuB;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0B,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAE,EAAjB;AAAqB,QAAA,KAAK,EAAE,SAA5B;AAAuC,QAAA,SAAS,EAAC,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA1B,CAH1B,EAIG,KAAKX,KAAL,CAAWY,OAAX,IAAsB,oBAAC,YAAD,oBAAkB,KAAKZ,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJzB,EAKG,KAAKA,KAAL,CAAWY,OAAX,IAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMN,cAAN,CALzB,CADF;AASD;;;;EApCgB5B,S;;AAuCnB,IAAMmC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AACxB,SAAO;AACLC,IAAAA,EAAE,EAAED,KAAK,CAACE,IAAN,CAAWA,IAAX,CAAgBD,EADf;AAELE,IAAAA,aAAa,EAAEH,KAAK,CAACI,IAAN,CAAWD,aAFrB;AAGLV,IAAAA,WAAW,EAAEO,KAAK,CAACL,UAAN,CAAiBU,eAAjB,CAAiCC,OAHzC;AAILR,IAAAA,OAAO,EAAEE,KAAK,CAACL,UAAN,CAAiBY,sBAJrB;AAKLV,IAAAA,QAAQ,EAAEG,KAAK,CAACL,UAAN,CAAiBa,uBALtB;AAMLC,IAAAA,gBAAgB,EAAET,KAAK,CAACU,KAAN,CAAYD,gBANzB;AAOLE,IAAAA,YAAY,EAAEX,KAAK,CAACU,KAAN,CAAYC,YAPrB;AAQLC,IAAAA,gBAAgB,EAAEZ,KAAK,CAACU,KAAN,CAAYE,gBARzB;AASLC,IAAAA,iBAAiB,EAAEb,KAAK,CAACU,KAAN,CAAYG,iBAT1B;AAULC,IAAAA,SAAS,EAAEd,KAAK,CAACU,KAAN,CAAYI;AAVlB,GAAP;AAYD,CAbD;;AAeA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,QAAQ,EAAI;AAC9B,SAAOnD,kBAAkB,CAAC;AACxBK,IAAAA,oBAAoB,EAApBA,oBADwB;AAExBK,IAAAA,WAAW,EAAXA,WAFwB;AAGxBJ,IAAAA,gBAAgB,EAAhBA,gBAHwB;AAIxBC,IAAAA,iBAAiB,EAAjBA,iBAJwB;AAKxBI,IAAAA,cAAc,EAAdA,cALwB;AAMxBH,IAAAA,gBAAgB,EAAhBA,gBANwB;AAOxBC,IAAAA,iBAAiB,EAAjBA,iBAPwB;AAQxBN,IAAAA,iBAAiB,EAAjBA,iBARwB;AASxBC,IAAAA,kBAAkB,EAAlBA;AATwB,GAAD,EAUtB+C,QAVsB,CAAzB;AAWD,CAZD;;AAcA,eAAelD,OAAO,CAACiC,QAAD,EAAWgB,WAAX,CAAP,CAA+BjC,IAA/B,CAAf;AAEAA,IAAI,CAACmC,SAAL,GAAiB;AACfhB,EAAAA,EAAE,EAAElC,SAAS,CAACmD,MADC;AAEff,EAAAA,aAAa,EAAEpC,SAAS,CAACoD,IAFV;AAGfxB,EAAAA,UAAU,EAAE5B,SAAS,CAACqD,KAHP;AAIftB,EAAAA,OAAO,EAAE/B,SAAS,CAACoD,IAJJ;AAKfV,EAAAA,gBAAgB,EAAE1C,SAAS,CAACoD,IALb;AAMfR,EAAAA,YAAY,EAAE5C,SAAS,CAACsD,MANT;AAOfT,EAAAA,gBAAgB,EAAE7C,SAAS,CAACoD,IAPb;AAQfN,EAAAA,iBAAiB,EAAE9C,SAAS,CAACoD,IARd;AASfL,EAAAA,SAAS,EAAE/C,SAAS,CAACuD,MATN;AAWfpD,EAAAA,oBAAoB,EAAEH,SAAS,CAACwD,IAXjB;AAYfhD,EAAAA,WAAW,EAAER,SAAS,CAACwD,IAZR;AAafpD,EAAAA,gBAAgB,EAAEJ,SAAS,CAACwD,IAbb;AAcfnD,EAAAA,iBAAiB,EAAEL,SAAS,CAACwD,IAdd;AAef/C,EAAAA,cAAc,EAAET,SAAS,CAACwD,IAfX;AAgBflD,EAAAA,gBAAgB,EAAEN,SAAS,CAACwD,IAhBb;AAiBfjD,EAAAA,iBAAiB,EAAEP,SAAS,CAACwD,IAjBd;AAkBfvD,EAAAA,iBAAiB,EAAED,SAAS,CAACwD,IAlBd;AAmBftD,EAAAA,kBAAkB,EAAEF,SAAS,CAACwD;AAnBf,CAAjB","sourcesContent":["import React, { Component } from 'react'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { PropTypes } from 'prop-types'\n\nimport { openCopyLinkModal, closeCopyLinkModal } from '../actions/modalActions'\nimport { fetchSlugTripReports } from '../actions/tripReportActions'\nimport { openCountryModal, closeCountryModal } from '../actions/modalActions'\nimport { openNotAuthModal, closeNotAuthModal } from '../actions/modalActions'\nimport { removeError } from '../actions/errorActions'\nimport { toggleFavorite } from '../actions/favoriteActions'\n\nimport CountryModal from '../components/CountryModal'\nimport CopyLinkModal from '../components/CopyLinkModal'\nimport NotAuthModal from '../components/NotAuthModal'\nimport TripReport from '../components/TripReport'\n\nimport { DotLoader } from 'react-spinners'\n\n/*\nThis component creates a link off the posts slug, so that users can share and\naccess posts externally.\n*/\nclass Post extends Component {\n\n  componentDidMount () {\n    const { slug } = this.props.match.params\n    this.props.fetchSlugTripReports(slug);\n  }\n\n  componentWillUnmount() {\n    this.props.removeError();\n  }\n\n  handleClick = (e) => {\n    e.preventDefault();\n    this.props.toggleFavorite(e.currentTarget.id);\n  }\n\n  render(){\n\n    let listTripReport = null;\n    if (this.props.tripReports){\n      listTripReport = this.props.tripReports.map(tripReport =>(\n        <div key={tripReport.id} style={{ marginBottom: 20 }}>\n          <TripReport handleClick={this.handleClick} {...tripReport} {...this.props} openCountryModal={this.props.openCountryModal}/>\n        </div>\n      ));\n    }\n\n    return(\n      <div className=\"content\">\n        <NotAuthModal {...this.props} />\n        <CopyLinkModal {...this.props} />\n        {this.props.fetching && <div className='centered'><DotLoader size={50} color={'#2196f3'} className=\"content\" /></div>}\n        {this.props.fetched && <CountryModal {...this.props} />}\n        {this.props.fetched && <div>{listTripReport}</div>}\n      </div>\n    );\n  }\n}\n\nconst mapState = state => {\n  return {\n    pk: state.user.user.pk,\n    authenticated: state.auth.authenticated,\n    tripReports: state.tripReport.slugTripReports.results,\n    fetched: state.tripReport.fetchedSlugTripReports,\n    fetching: state.tripReport.fetchingSlugTripReports,\n    showCountryModal: state.modal.showCountryModal,\n    modalCountry: state.modal.modalCountry,\n    showNotAuthModal: state.modal.showNotAuthModal,\n    showCopyLinkModal: state.modal.showCopyLinkModal,\n    modalLink: state.modal.modalLink\n  };\n}\n\nconst mapDispatch = dispatch => {\n  return bindActionCreators({\n    fetchSlugTripReports,\n    removeError,\n    openCountryModal,\n    closeCountryModal,\n    toggleFavorite,\n    openNotAuthModal,\n    closeNotAuthModal,\n    openCopyLinkModal,\n    closeCopyLinkModal,\n  }, dispatch);\n}\n\nexport default connect(mapState, mapDispatch)(Post);\n\nPost.propTypes = {\n  pk: PropTypes.number,\n  authenticated: PropTypes.bool,\n  tripReport: PropTypes.array,\n  fetched: PropTypes.bool,\n  showCountryModal: PropTypes.bool,\n  modalCountry: PropTypes.object,\n  showNotAuthModal: PropTypes.bool,\n  showCopyLinkModal: PropTypes.bool,\n  modalLink: PropTypes.string,\n\n  fetchSlugTripReports: PropTypes.func,\n  removeError: PropTypes.func,\n  openCountryModal: PropTypes.func,\n  closeCountryModal: PropTypes.func,\n  toggleFavorite: PropTypes.func,\n  openNotAuthModal: PropTypes.func,\n  closeNotAuthModal: PropTypes.func,\n  openCopyLinkModal: PropTypes.func,\n  closeCopyLinkModal: PropTypes.func,\n};\n"]},"metadata":{},"sourceType":"module"}