{"ast":null,"code":"import axios from 'axios';\nexport var fetchUserPending = function fetchUserPending() {\n  return {\n    type: \"FETCH_USER_PENDING\"\n  };\n};\nexport var fetchUserFulfilled = function fetchUserFulfilled(user) {\n  return {\n    type: \"FETCH_USER_FULFILLED\",\n    user: user\n  };\n};\nexport var fetchUserRejected = function fetchUserRejected(error) {\n  return {\n    type: \"FETCH_USER_REJECTED\",\n    error: error\n  };\n};\nexport var putCountryPending = function putCountryPending() {\n  return {\n    type: \"PUT_COUNTRY_PENDING\"\n  };\n};\nexport var putCountryFulfilled = function putCountryFulfilled(user) {\n  return {\n    type: \"PUT_COUNTRY_FULFILLED\",\n    user: user\n  };\n};\nexport var putCountryRejected = function putCountryRejected(error) {\n  return {\n    type: \"PUT_COUNTRY_REJECTED\",\n    error: error\n  };\n};\nexport var fetchUser = function fetchUser() {\n  var token = localStorage.getItem('token');\n  return function (dispatch) {\n    dispatch(fetchUserPending());\n    axios.get('http://localhost:8000/api/v1/rest-auth/user/', {\n      headers: {\n        'Authorization': \"Token \".concat(token)\n      }\n    }).then(function (response) {\n      var user = response.data;\n      dispatch(fetchUserFulfilled(user));\n    }).catch(function (err) {\n      dispatch(fetchUserRejected(err));\n    });\n  };\n};\nexport var putCountry = function putCountry(username, countries, home_country) {\n  var token = localStorage.getItem('token');\n  return function (dispatch) {\n    dispatch(putCountryPending());\n    axios.put('http://localhost:8000/api/v1/rest-auth/user/', {\n      countries: countries,\n      username: username,\n      home_country: home_country\n    }, {\n      headers: {\n        'Authorization': \"Token \".concat(token)\n      }\n    }).then(function (response) {\n      var user = response.data;\n      dispatch(putCountryFulfilled(user));\n    }).catch(function (err) {\n      dispatch(putCountryRejected(err));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/peterzernia/projects/countries/frontend/src/actions/userActions.js"],"names":["axios","fetchUserPending","type","fetchUserFulfilled","user","fetchUserRejected","error","putCountryPending","putCountryFulfilled","putCountryRejected","fetchUser","token","localStorage","getItem","dispatch","get","headers","then","response","data","catch","err","putCountry","username","countries","home_country","put"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AACpC,SAAO;AACLC,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,IAAI,EAAI;AACxC,SAAO;AACLF,IAAAA,IAAI,EAAE,sBADD;AAELE,IAAAA,IAAI,EAAEA;AAFD,GAAP;AAID,CALM;AAOP,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,KAAK,EAAI;AACxC,SAAO;AACLJ,IAAAA,IAAI,EAAE,qBADD;AAELI,IAAAA,KAAK,EAAEA;AAFF,GAAP;AAID,CALM;AAOP,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AACrC,SAAO;AACLL,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,IAAMM,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAJ,IAAI,EAAI;AACzC,SAAO;AACLF,IAAAA,IAAI,EAAE,uBADD;AAELE,IAAAA,IAAI,EAAEA;AAFD,GAAP;AAID,CALM;AAOP,OAAO,IAAMK,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAH,KAAK,EAAI;AACzC,SAAO;AACLJ,IAAAA,IAAI,EAAE,sBADD;AAELI,IAAAA,KAAK,EAAEA;AAFF,GAAP;AAID,CALM;AAOP,OAAO,IAAMI,SAAS,GAAG,SAAZA,SAAY,GAAM;AAC7B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,SAAO,UAAAC,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAACb,gBAAgB,EAAjB,CAAR;AACAD,IAAAA,KAAK,CAACe,GAAN,CAAU,8CAAV,EAA0D;AAACC,MAAAA,OAAO,EAAE;AAAE,yCAA0BL,KAA1B;AAAF;AAAV,KAA1D,EACGM,IADH,CACQ,UAAAC,QAAQ,EAAI;AAChB,UAAMd,IAAI,GAAGc,QAAQ,CAACC,IAAtB;AACAL,MAAAA,QAAQ,CAACX,kBAAkB,CAACC,IAAD,CAAnB,CAAR;AACD,KAJH,EAKGgB,KALH,CAKS,UAAAC,GAAG,EAAI;AACZP,MAAAA,QAAQ,CAACT,iBAAiB,CAACgB,GAAD,CAAlB,CAAR;AACD,KAPH;AAQD,GAVD;AAWD,CAbM;AAeP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,QAAD,EAAWC,SAAX,EAAsBC,YAAtB,EAAuC;AAC/D,MAAMd,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,SAAO,UAAAC,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAACP,iBAAiB,EAAlB,CAAR;AACAP,IAAAA,KAAK,CAAC0B,GAAN,CACE,8CADF,EAEE;AACEF,MAAAA,SAAS,EAAEA,SADb;AAEED,MAAAA,QAAQ,EAAEA,QAFZ;AAGEE,MAAAA,YAAY,EAAEA;AAHhB,KAFF,EAOE;AAACT,MAAAA,OAAO,EAAE;AAAE,yCAA0BL,KAA1B;AAAF;AAAV,KAPF,EASGM,IATH,CASQ,UAAAC,QAAQ,EAAI;AAChB,UAAMd,IAAI,GAAGc,QAAQ,CAACC,IAAtB;AACAL,MAAAA,QAAQ,CAACN,mBAAmB,CAACJ,IAAD,CAApB,CAAR;AACD,KAZH,EAaGgB,KAbH,CAaS,UAAAC,GAAG,EAAI;AACZP,MAAAA,QAAQ,CAACL,kBAAkB,CAACY,GAAD,CAAnB,CAAR;AACD,KAfH;AAgBD,GAlBD;AAmBD,CArBM","sourcesContent":["import axios from 'axios'\n\nexport const fetchUserPending = () => {\n  return {\n    type: \"FETCH_USER_PENDING\"\n  }\n}\n\nexport const fetchUserFulfilled = user => {\n  return {\n    type: \"FETCH_USER_FULFILLED\",\n    user: user\n  }\n}\n\nexport const fetchUserRejected = error => {\n  return {\n    type: \"FETCH_USER_REJECTED\",\n    error: error\n  }\n}\n\nexport const putCountryPending = () => {\n  return {\n    type: \"PUT_COUNTRY_PENDING\"\n  }\n}\n\nexport const putCountryFulfilled = user => {\n  return {\n    type: \"PUT_COUNTRY_FULFILLED\",\n    user: user\n  }\n}\n\nexport const putCountryRejected = error => {\n  return {\n    type: \"PUT_COUNTRY_REJECTED\",\n    error: error\n  }\n}\n\nexport const fetchUser = () => {\n  const token = localStorage.getItem('token');\n  return dispatch => {\n    dispatch(fetchUserPending());\n    axios.get('http://localhost:8000/api/v1/rest-auth/user/', {headers: { 'Authorization': `Token ${token}`}})\n      .then(response => {\n        const user = response.data;\n        dispatch(fetchUserFulfilled(user));\n      })\n      .catch(err => {\n        dispatch(fetchUserRejected(err));\n      })\n  }\n}\n\nexport const putCountry = (username, countries, home_country) => {\n  const token = localStorage.getItem('token');\n  return dispatch => {\n    dispatch(putCountryPending());\n    axios.put(\n      'http://localhost:8000/api/v1/rest-auth/user/',\n      {\n        countries: countries,\n        username: username,\n        home_country: home_country\n      },\n      {headers: { 'Authorization': `Token ${token}`}}\n  )\n      .then(response => {\n        const user = response.data;\n        dispatch(putCountryFulfilled(user));\n      })\n      .catch(err => {\n        dispatch(putCountryRejected(err));\n      })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}