{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport auth from './auth';\nimport country from './country';\nimport error from './error';\nimport modal from './modal';\nimport tripReport from './tripReport';\nimport user from './user';\nvar reducer = combineReducers({\n  auth: auth,\n  country: country,\n  error: error,\n  modal: modal,\n  tripReport: tripReport,\n  user: user\n});\nvar middleware = applyMiddleware(thunk); // In development, we want the logger running.\n\nif (process.env.NODE_ENV === 'development') {\n  middleware = applyMiddleware(thunk, createLogger());\n}\n\nvar store = createStore(reducer, middleware, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nexport default store;","map":{"version":3,"sources":["/Users/peterzernia/projects/countries/src/store/index.js"],"names":["createStore","combineReducers","applyMiddleware","createLogger","thunk","auth","country","error","modal","tripReport","user","reducer","middleware","process","env","NODE_ENV","store","window","__REDUX_DEVTOOLS_EXTENSION__"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,IAAMC,OAAO,GAAGV,eAAe,CAAC;AAACI,EAAAA,IAAI,EAAJA,IAAD;AAAOC,EAAAA,OAAO,EAAPA,OAAP;AAAgBC,EAAAA,KAAK,EAALA,KAAhB;AAAuBC,EAAAA,KAAK,EAALA,KAAvB;AAA8BC,EAAAA,UAAU,EAAVA,UAA9B;AAA0CC,EAAAA,IAAI,EAAJA;AAA1C,CAAD,CAA/B;AAEA,IAAIE,UAAU,GAAGV,eAAe,CAACE,KAAD,CAAhC,C,CACA;;AACA,IAAIS,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CH,EAAAA,UAAU,GAAGV,eAAe,CAACE,KAAD,EAAQD,YAAY,EAApB,CAA5B;AACD;;AAED,IAAMa,KAAK,GAAGhB,WAAW,CAACW,OAAD,EAAUC,UAAV,EAAsBK,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAA7D,CAAzB;AAEA,eAAeF,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport { createLogger } from 'redux-logger'\nimport thunk from 'redux-thunk'\nimport auth from './auth'\nimport country from './country'\nimport error from './error'\nimport modal from './modal'\nimport tripReport from './tripReport'\nimport user from './user'\n\nconst reducer = combineReducers({auth, country, error, modal, tripReport, user})\n\nlet middleware = applyMiddleware(thunk)\n// In development, we want the logger running.\nif (process.env.NODE_ENV === 'development') {\n  middleware = applyMiddleware(thunk, createLogger())\n}\n\nconst store = createStore(reducer, middleware, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}